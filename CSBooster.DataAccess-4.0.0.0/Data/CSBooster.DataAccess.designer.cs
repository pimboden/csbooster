#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _4screen.CSB.DataAccess.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CSBooster.WebForumSG")]
	public partial class CSBooster_DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserthitbl_NavigationStructure_NST(hitbl_NavigationStructure_NST instance);
    partial void Updatehitbl_NavigationStructure_NST(hitbl_NavigationStructure_NST instance);
    partial void Deletehitbl_NavigationStructure_NST(hitbl_NavigationStructure_NST instance);
    partial void Inserthitbl_Notification_RegisteredEvent_NRE(hitbl_Notification_RegisteredEvent_NRE instance);
    partial void Updatehitbl_Notification_RegisteredEvent_NRE(hitbl_Notification_RegisteredEvent_NRE instance);
    partial void Deletehitbl_Notification_RegisteredEvent_NRE(hitbl_Notification_RegisteredEvent_NRE instance);
    partial void Inserthirel_Community_User_CUR(hirel_Community_User_CUR instance);
    partial void Updatehirel_Community_User_CUR(hirel_Community_User_CUR instance);
    partial void Deletehirel_Community_User_CUR(hirel_Community_User_CUR instance);
    partial void Inserthitbl_UserFriends_FRI(hitbl_UserFriends_FRI instance);
    partial void Updatehitbl_UserFriends_FRI(hitbl_UserFriends_FRI instance);
    partial void Deletehitbl_UserFriends_FRI(hitbl_UserFriends_FRI instance);
    partial void Inserthitbl_DataObject_OBJ(hitbl_DataObject_OBJ instance);
    partial void Updatehitbl_DataObject_OBJ(hitbl_DataObject_OBJ instance);
    partial void Deletehitbl_DataObject_OBJ(hitbl_DataObject_OBJ instance);
    partial void Inserthitbl_Main_MAN(hitbl_Main_MAN instance);
    partial void Updatehitbl_Main_MAN(hitbl_Main_MAN instance);
    partial void Deletehitbl_Main_MAN(hitbl_Main_MAN instance);
    partial void Inserthitbl_WidgetInstanceText_WIT(hitbl_WidgetInstanceText_WIT instance);
    partial void Updatehitbl_WidgetInstanceText_WIT(hitbl_WidgetInstanceText_WIT instance);
    partial void Deletehitbl_WidgetInstanceText_WIT(hitbl_WidgetInstanceText_WIT instance);
    partial void Inserthitbl_Community_CTY(hitbl_Community_CTY instance);
    partial void Updatehitbl_Community_CTY(hitbl_Community_CTY instance);
    partial void Deletehitbl_Community_CTY(hitbl_Community_CTY instance);
    partial void Inserthitbl_CommunityText_CTT(hitbl_CommunityText_CTT instance);
    partial void Updatehitbl_CommunityText_CTT(hitbl_CommunityText_CTT instance);
    partial void Deletehitbl_CommunityText_CTT(hitbl_CommunityText_CTT instance);
    partial void Inserthitbl_FilterBadWords_FBW(hitbl_FilterBadWords_FBW instance);
    partial void Updatehitbl_FilterBadWords_FBW(hitbl_FilterBadWords_FBW instance);
    partial void Deletehitbl_FilterBadWords_FBW(hitbl_FilterBadWords_FBW instance);
    partial void Inserthitbl_Settings_SET(hitbl_Settings_SET instance);
    partial void Updatehitbl_Settings_SET(hitbl_Settings_SET instance);
    partial void Deletehitbl_Settings_SET(hitbl_Settings_SET instance);
    partial void Inserthitbl_Page_PAG(hitbl_Page_PAG instance);
    partial void Updatehitbl_Page_PAG(hitbl_Page_PAG instance);
    partial void Deletehitbl_Page_PAG(hitbl_Page_PAG instance);
    partial void Inserthitbl_Partners_PAR(hitbl_Partners_PAR instance);
    partial void Updatehitbl_Partners_PAR(hitbl_Partners_PAR instance);
    partial void Deletehitbl_Partners_PAR(hitbl_Partners_PAR instance);
    partial void Inserthitbl_WidgetInstance_IN(hitbl_WidgetInstance_IN instance);
    partial void Updatehitbl_WidgetInstance_IN(hitbl_WidgetInstance_IN instance);
    partial void Deletehitbl_WidgetInstance_IN(hitbl_WidgetInstance_IN instance);
    partial void Inserthitbl_WidgetTemplates_WTP(hitbl_WidgetTemplates_WTP instance);
    partial void Updatehitbl_WidgetTemplates_WTP(hitbl_WidgetTemplates_WTP instance);
    partial void Deletehitbl_WidgetTemplates_WTP(hitbl_WidgetTemplates_WTP instance);
    #endregion
		
		public CSBooster_DataContext() : 
				base("Data Source=4SAPPL02\\SQL2005;Initial Catalog=CSBooster.WebForumSG;User ID=CSBoost" +
						"er_User", mappingSource)
		{
			OnCreated();
		}
		
		public CSBooster_DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSBooster_DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSBooster_DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSBooster_DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<hitbl_NavigationStructure_NST> hitbl_NavigationStructure_NSTs
		{
			get
			{
				return this.GetTable<hitbl_NavigationStructure_NST>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Notification_RegisteredEvent_NRE> hitbl_Notification_RegisteredEvent_NREs
		{
			get
			{
				return this.GetTable<hitbl_Notification_RegisteredEvent_NRE>();
			}
		}
		
		public System.Data.Linq.Table<hirel_Community_User_CUR> hirel_Community_User_CURs
		{
			get
			{
				return this.GetTable<hirel_Community_User_CUR>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_UserFriends_FRI> hitbl_UserFriends_FRIs
		{
			get
			{
				return this.GetTable<hitbl_UserFriends_FRI>();
			}
		}
		
		public System.Data.Linq.Table<MessageResult> MessageResults
		{
			get
			{
				return this.GetTable<MessageResult>();
			}
		}
		
		public System.Data.Linq.Table<CommentResult> CommentResults
		{
			get
			{
				return this.GetTable<CommentResult>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_DataObject_OBJ> hitbl_DataObject_OBJs
		{
			get
			{
				return this.GetTable<hitbl_DataObject_OBJ>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Main_MAN> hitbl_Main_MANs
		{
			get
			{
				return this.GetTable<hitbl_Main_MAN>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_WidgetInstanceText_WIT> hitbl_WidgetInstanceText_WITs
		{
			get
			{
				return this.GetTable<hitbl_WidgetInstanceText_WIT>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Community_CTY> hitbl_Community_CTies
		{
			get
			{
				return this.GetTable<hitbl_Community_CTY>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_CommunityText_CTT> hitbl_CommunityText_CTTs
		{
			get
			{
				return this.GetTable<hitbl_CommunityText_CTT>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_FilterBadWords_FBW> hitbl_FilterBadWords_FBWs
		{
			get
			{
				return this.GetTable<hitbl_FilterBadWords_FBW>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Settings_SET> hitbl_Settings_SETs
		{
			get
			{
				return this.GetTable<hitbl_Settings_SET>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Page_PAG> hitbl_Page_PAGs
		{
			get
			{
				return this.GetTable<hitbl_Page_PAG>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_Partners_PAR> hitbl_Partners_PARs
		{
			get
			{
				return this.GetTable<hitbl_Partners_PAR>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_WidgetInstance_IN> hitbl_WidgetInstance_INs
		{
			get
			{
				return this.GetTable<hitbl_WidgetInstance_IN>();
			}
		}
		
		public System.Data.Linq.Table<hitbl_WidgetTemplates_WTP> hitbl_WidgetTemplates_WTPs
		{
			get
			{
				return this.GetTable<hitbl_WidgetTemplates_WTP>();
			}
		}
		
		[Function(Name="dbo.hisp_Comments_SetCommentStatus")]
		public int hisp_Comments_SetCommentStatus([Parameter(Name="CommentId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> commentId, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), commentId, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_aspnet_Profile_UpdateLastActivityDate")]
		public int hisp_aspnet_Profile_UpdateLastActivityDate([Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_GeoKoordinates_Get")]
		public ISingleResult<hisp_GeoKoordinates_GetResult> hisp_GeoKoordinates_Get([Parameter(Name="GEO_Street", DbType="NVarChar(128)")] string gEO_Street, [Parameter(Name="GEO_PLZ", DbType="NVarChar(8)")] string gEO_PLZ, [Parameter(Name="GEO_City", DbType="NVarChar(50)")] string gEO_City, [Parameter(Name="GEO_Land", DbType="NVarChar(5)")] string gEO_Land)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gEO_Street, gEO_PLZ, gEO_City, gEO_Land);
			return ((ISingleResult<hisp_GeoKoordinates_GetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_GeoKoordinates_Save")]
		public int hisp_GeoKoordinates_Save([Parameter(Name="GEO_Street", DbType="NVarChar(128)")] string gEO_Street, [Parameter(Name="GEO_PLZ", DbType="NVarChar(8)")] string gEO_PLZ, [Parameter(Name="GEO_City", DbType="NVarChar(50)")] string gEO_City, [Parameter(Name="GEO_Land", DbType="NVarChar(5)")] string gEO_Land, [Parameter(Name="GEO_Kanton", DbType="NVarChar(25)")] string gEO_Kanton, [Parameter(Name="GEO_Breite", DbType="Float")] System.Nullable<double> gEO_Breite, [Parameter(Name="GEO_Laenge", DbType="Float")] System.Nullable<double> gEO_Laenge)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gEO_Street, gEO_PLZ, gEO_City, gEO_Land, gEO_Kanton, gEO_Breite, gEO_Laenge);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_TagWord_GetIDSByWords")]
		public ISingleResult<hisp_TagWord_GetIDSByWordsResult> hisp_TagWord_GetIDSByWords([Parameter(Name="TagWords", DbType="NVarChar(MAX)")] string tagWords)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagWords);
			return ((ISingleResult<hisp_TagWord_GetIDSByWordsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Community_FindGroups")]
		public ISingleResult<hisp_Community_FindGroupsResult> hisp_Community_FindGroups([Parameter(Name="CommunityId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> communityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), communityID);
			return ((ISingleResult<hisp_Community_FindGroupsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Content_GetContent")]
		public ISingleResult<hisp_Content_GetContentResult> hisp_Content_GetContent([Parameter(Name="CTY_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> cTY_ID, [Parameter(Name="CNT_Name", DbType="NVarChar(50)")] string cNT_Name, [Parameter(Name="CNT_LangCode", DbType="NVarChar(10)")] string cNT_LangCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cTY_ID, cNT_Name, cNT_LangCode);
			return ((ISingleResult<hisp_Content_GetContentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Content_SaveContent")]
		public int hisp_Content_SaveContent([Parameter(Name="CTY_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> cTY_ID, [Parameter(Name="CNT_Name", DbType="NVarChar(50)")] string cNT_Name, [Parameter(Name="CNT_LangCode", DbType="NVarChar(10)")] string cNT_LangCode, [Parameter(Name="CNT_Text", DbType="NVarChar(MAX)")] string cNT_Text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cTY_ID, cNT_Name, cNT_LangCode, cNT_Text);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetNavigationForRender")]
		public ISingleResult<hisp_Navigation_GetNavigationForRenderResult> hisp_Navigation_GetNavigationForRender([Parameter(Name="NST_KeyName", DbType="NVarChar(50)")] string nST_KeyName, [Parameter(Name="NAV_LangCode", DbType="NVarChar(10)")] string nAV_LangCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_KeyName, nAV_LangCode);
			return ((ISingleResult<hisp_Navigation_GetNavigationForRenderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_SaveNavigationStructure")]
		public int hisp_Navigation_SaveNavigationStructure([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NST_KeyName", DbType="NVarChar(50)")] string nST_KeyName, [Parameter(Name="NST_XMLStruct", DbType="NVarChar(MAX)")] string nST_XMLStruct)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nST_KeyName, nST_XMLStruct);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetNavigationID")]
		public ISingleResult<hisp_Navigation_GetNavigationIDResult> hisp_Navigation_GetNavigationID([Parameter(Name="NST_KeyName", DbType="NVarChar(50)")] string nST_KeyName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_KeyName);
			return ((ISingleResult<hisp_Navigation_GetNavigationIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetNavigationLanguageXML")]
		public ISingleResult<hisp_Navigation_GetNavigationLanguageXMLResult> hisp_Navigation_GetNavigationLanguageXML([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NAV_LangCode", DbType="NVarChar(10)")] string nAV_LangCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nAV_LangCode);
			return ((ISingleResult<hisp_Navigation_GetNavigationLanguageXMLResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_SaveNavigationLanguage")]
		public int hisp_Navigation_SaveNavigationLanguage([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NAV_LangCode", DbType="NVarChar(50)")] string nAV_LangCode, [Parameter(Name="NAV_XMLNames", DbType="NVarChar(MAX)")] string nAV_XMLNames, [Parameter(Name="NAV_XMLNavigation", DbType="NVarChar(MAX)")] string nAV_XMLNavigation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nAV_LangCode, nAV_XMLNames, nAV_XMLNavigation);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_DeleteNavigation")]
		public int hisp_Navigation_DeleteNavigation([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_SaveNavigationKeyName")]
		public int hisp_Navigation_SaveNavigationKeyName([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NST_KeyName", DbType="NVarChar(50)")] string nST_KeyName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nST_KeyName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetNavigationKeyName")]
		public ISingleResult<hisp_Navigation_GetNavigationKeyNameResult> hisp_Navigation_GetNavigationKeyName([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID);
			return ((ISingleResult<hisp_Navigation_GetNavigationKeyNameResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_SavePreChache")]
		public int hisp_Navigation_SavePreChache([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NAV_LangCode", DbType="NVarChar(10)")] string nAV_LangCode, [Parameter(Name="ASP_RoleName", DbType="NVarChar(256)")] string aSP_RoleName, [Parameter(Name="NPC_PreCacheXML", DbType="NVarChar(MAX)")] string nPC_PreCacheXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nAV_LangCode, aSP_RoleName, nPC_PreCacheXML);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetPreChache")]
		public ISingleResult<hisp_Navigation_GetPreChacheResult> hisp_Navigation_GetPreChache([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID, [Parameter(Name="NAV_LangCode", DbType="NVarChar(10)")] string nAV_LangCode, [Parameter(Name="ASP_RoleName", DbType="NVarChar(256)")] string aSP_RoleName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID, nAV_LangCode, aSP_RoleName);
			return ((ISingleResult<hisp_Navigation_GetPreChacheResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_User_GetUserLockOut")]
		public ISingleResult<hisp_User_GetUserLockOutResult> hisp_User_GetUserLockOut([Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<hisp_User_GetUserLockOutResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_User_LockUnlockUser")]
		public int hisp_User_LockUnlockUser([Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [Parameter(Name="IsLockedOut", DbType="Bit")] System.Nullable<bool> isLockedOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, isLockedOut);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Navigation_GetNavigationStructureXML")]
		public ISingleResult<hisp_Navigation_GetNavigationStructureXMLResult> hisp_Navigation_GetNavigationStructureXML([Parameter(Name="NST_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> nST_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nST_ID);
			return ((ISingleResult<hisp_Navigation_GetNavigationStructureXMLResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Community_GetIDSByVUrls")]
		public ISingleResult<hisp_Community_GetIDSByVUrlsResult> hisp_Community_GetIDSByVUrls([Parameter(Name="CommunityNames", DbType="NVarChar(MAX)")] string communityNames)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), communityNames);
			return ((ISingleResult<hisp_Community_GetIDSByVUrlsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_DataObjectTag_GetAllButSynonyms")]
		public ISingleResult<hisp_DataObjectTag_GetAllButSynonymsResult> hisp_DataObjectTag_GetAllButSynonyms()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<hisp_DataObjectTag_GetAllButSynonymsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetMessage")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetMessage([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID);
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetAlerts")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetAlerts([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="DateSentFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateSentFrom, [Parameter(Name="DateSentTo", DbType="DateTime")] System.Nullable<System.DateTime> dateSentTo, [Parameter(Name="Flagged", DbType="Bit")] System.Nullable<bool> flagged, [Parameter(Name="IsRead", DbType="Bit")] System.Nullable<bool> isRead, [Parameter(Name="FromUserName", DbType="NVarChar(64)")] string fromUserName, [Parameter(Name="Subject", DbType="NVarChar(64)")] string subject, [Parameter(Name="Message", DbType="NVarChar(64)")] string message, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberMessages", DbType="Int")] ref System.Nullable<int> numberMessages)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, dateSentFrom, dateSentTo, flagged, isRead, fromUserName, subject, message, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberMessages);
			numberMessages = ((System.Nullable<int>)(result.GetParameterValue(13)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetMessagesUserFlagged")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetMessagesUserFlagged([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="DateSentFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateSentFrom, [Parameter(Name="DateSentTo", DbType="DateTime")] System.Nullable<System.DateTime> dateSentTo, [Parameter(Name="Flagged", DbType="Bit")] System.Nullable<bool> flagged, [Parameter(Name="IsRead", DbType="Bit")] System.Nullable<bool> isRead, [Parameter(Name="UserName", DbType="NVarChar(64)")] string userName, [Parameter(Name="Subject", DbType="NVarChar(64)")] string subject, [Parameter(Name="Message", DbType="NVarChar(64)")] string message, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberMessages", DbType="Int")] ref System.Nullable<int> numberMessages)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, dateSentFrom, dateSentTo, flagged, isRead, userName, subject, message, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberMessages);
			numberMessages = ((System.Nullable<int>)(result.GetParameterValue(13)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetMessagesUserInbox")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetMessagesUserInbox(
					[Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, 
					[Parameter(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, 
					[Parameter(Name="DateSentFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateSentFrom, 
					[Parameter(Name="DateSentTo", DbType="DateTime")] System.Nullable<System.DateTime> dateSentTo, 
					[Parameter(Name="Flagged", DbType="Bit")] System.Nullable<bool> flagged, 
					[Parameter(Name="IsRead", DbType="Bit")] System.Nullable<bool> isRead, 
					[Parameter(Name="FromUserName", DbType="NVarChar(64)")] string fromUserName, 
					[Parameter(Name="Subject", DbType="NVarChar(64)")] string subject, 
					[Parameter(Name="Message", DbType="NVarChar(64)")] string message, 
					[Parameter(Name="MessageType", DbType="Int")] System.Nullable<int> messageType, 
					[Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, 
					[Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, 
					[Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, 
					[Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, 
					[Parameter(Name="NumberMessages", DbType="Int")] ref System.Nullable<int> numberMessages)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, groupID, dateSentFrom, dateSentTo, flagged, isRead, fromUserName, subject, message, messageType, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberMessages);
			numberMessages = ((System.Nullable<int>)(result.GetParameterValue(15)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetMessagesUserOutbox")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetMessagesUserOutbox([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [Parameter(Name="DateSentFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateSentFrom, [Parameter(Name="DateSentTo", DbType="DateTime")] System.Nullable<System.DateTime> dateSentTo, [Parameter(Name="Flagged", DbType="Bit")] System.Nullable<bool> flagged, [Parameter(Name="IsRead", DbType="Bit")] System.Nullable<bool> isRead, [Parameter(Name="ToUserName", DbType="NVarChar(64)")] string toUserName, [Parameter(Name="Subject", DbType="NVarChar(64)")] string subject, [Parameter(Name="Message", DbType="NVarChar(64)")] string message, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberMessages", DbType="Int")] ref System.Nullable<int> numberMessages)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, groupID, dateSentFrom, dateSentTo, flagged, isRead, toUserName, subject, message, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberMessages);
			numberMessages = ((System.Nullable<int>)(result.GetParameterValue(14)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetRequestUserInbox")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetRequestUserInbox([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="NumberItems", DbType="Int")] ref System.Nullable<int> numberItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, pageNum, pageSize, numberItems);
			numberItems = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetRequestUserOutbox")]
		public ISingleResult<MessageResult> hisp_UserMessages_GetRequestUserOutbox([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="NumberItems", DbType="Int")] ref System.Nullable<int> numberItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, pageNum, pageSize, numberItems);
			numberItems = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((ISingleResult<MessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Comments_GetComment")]
		public ISingleResult<CommentResult> hisp_Comments_GetComment([Parameter(Name="ComId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comId);
			return ((ISingleResult<CommentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Comments_GetComments")]
		public ISingleResult<CommentResult> hisp_Comments_GetComments([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="CreatedFrom", DbType="DateTime")] System.Nullable<System.DateTime> createdFrom, [Parameter(Name="CreatedTo", DbType="DateTime")] System.Nullable<System.DateTime> createdTo, [Parameter(Name="Text", DbType="NVarChar(64)")] string text, [Parameter(Name="ObjectId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> objectId, [Parameter(Name="UserName", DbType="NVarChar(64)")] string userName, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberItems", DbType="Int")] ref System.Nullable<int> numberItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, createdFrom, createdTo, text, objectId, userName, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberItems);
			numberItems = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((ISingleResult<CommentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Comments_GetCommentsPosted")]
		public ISingleResult<CommentResult> hisp_Comments_GetCommentsPosted([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="CreatedFrom", DbType="DateTime")] System.Nullable<System.DateTime> createdFrom, [Parameter(Name="CreatedTo", DbType="DateTime")] System.Nullable<System.DateTime> createdTo, [Parameter(Name="Text", DbType="NVarChar(64)")] string text, [Parameter(Name="ObjectId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> objectId, [Parameter(Name="UserName", DbType="NVarChar(64)")] string userName, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberItems", DbType="Int")] ref System.Nullable<int> numberItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, createdFrom, createdTo, text, objectId, userName, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberItems);
			numberItems = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((ISingleResult<CommentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Comments_GetCommentsReceived")]
		public ISingleResult<CommentResult> hisp_Comments_GetCommentsReceived([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="CreatedFrom", DbType="DateTime")] System.Nullable<System.DateTime> createdFrom, [Parameter(Name="CreatedTo", DbType="DateTime")] System.Nullable<System.DateTime> createdTo, [Parameter(Name="Text", DbType="NVarChar(64)")] string text, [Parameter(Name="ObjectId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> objectId, [Parameter(Name="UserName", DbType="NVarChar(64)")] string userName, [Parameter(Name="GenSearchParam", DbType="NVarChar(64)")] string genSearchParam, [Parameter(Name="PageNum", DbType="Int")] System.Nullable<int> pageNum, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="SortAttr", DbType="VarChar(32)")] string sortAttr, [Parameter(Name="SortDir", DbType="VarChar(4)")] string sortDir, [Parameter(Name="NumberItems", DbType="Int")] ref System.Nullable<int> numberItems)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, createdFrom, createdTo, text, objectId, userName, genSearchParam, pageNum, pageSize, sortAttr, sortDir, numberItems);
			numberItems = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((ISingleResult<CommentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_RemoveUserTemplate")]
		public int hisp_WidgetTemplates_RemoveUserTemplate([Parameter(Name="WTP_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wTP_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), wTP_ID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_InsertUserTemplate")]
		public int hisp_WidgetTemplates_InsertUserTemplate([Parameter(Name="WTP_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wTP_ID, [Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="WTP_Name", DbType="NVarChar(255)")] string wTP_Name, [Parameter(Name="WTP_Template", DbType="NVarChar(MAX)")] string wTP_Template)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), wTP_ID, userID, wTP_Name, wTP_Template);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_ReduceCount")]
		public int hisp_WidgetTemplates_ReduceCount([Parameter(Name="PAG_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pAG_ID, [Parameter(Name="WTP_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wTP_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pAG_ID, wTP_ID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Widget_LoadInstanceData")]
		public ISingleResult<hisp_Widget_LoadInstanceDataResult> hisp_Widget_LoadInstanceData([Parameter(Name="INS_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iNS_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iNS_ID);
			return ((ISingleResult<hisp_Widget_LoadInstanceDataResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Widget_SaveInstanceData")]
		public int hisp_Widget_SaveInstanceData([Parameter(Name="INS_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iNS_ID, [Parameter(Name="INS_XmlStateData", DbType="NVarChar(MAX)")] string iNS_XmlStateData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iNS_ID, iNS_XmlStateData);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_GetUserTemplates")]
		public ISingleResult<hisp_WidgetTemplates_GetUserTemplatesResult> hisp_WidgetTemplates_GetUserTemplates([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<hisp_WidgetTemplates_GetUserTemplatesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_IncreaseCount")]
		public int hisp_WidgetTemplates_IncreaseCount([Parameter(Name="PAG_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pAG_ID, [Parameter(Name="WTP_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wTP_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pAG_ID, wTP_ID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessagesGroup_Delete")]
		public int hisp_UserMessagesGroup_Delete([Parameter(Name="ASP_UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> aSP_UserId, [Parameter(Name="MGR_Type", DbType="Int")] System.Nullable<int> mGR_Type, [Parameter(Name="MGR_GroupId", DbType="Int")] System.Nullable<int> mGR_GroupId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aSP_UserId, mGR_Type, mGR_GroupId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessagesGroup_Exist")]
		public ISingleResult<hisp_UserMessagesGroup_ExistResult> hisp_UserMessagesGroup_Exist([Parameter(Name="ASP_UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> aSP_UserId, [Parameter(Name="MGR_Type", DbType="Int")] System.Nullable<int> mGR_Type, [Parameter(Name="MGR_Title", DbType="NVarChar(30)")] string mGR_Title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aSP_UserId, mGR_Type, mGR_Title);
			return ((ISingleResult<hisp_UserMessagesGroup_ExistResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessagesGroup_Load")]
		public ISingleResult<hisp_UserMessagesGroup_LoadResult> hisp_UserMessagesGroup_Load([Parameter(Name="ASP_UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> aSP_UserId, [Parameter(Name="MGR_Type", DbType="Int")] System.Nullable<int> mGR_Type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aSP_UserId, mGR_Type);
			return ((ISingleResult<hisp_UserMessagesGroup_LoadResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessagesGroup_Update")]
		public ISingleResult<hisp_UserMessagesGroup_UpdateResult> hisp_UserMessagesGroup_Update([Parameter(Name="ASP_UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> aSP_UserId, [Parameter(Name="MGR_Type", DbType="Int")] System.Nullable<int> mGR_Type, [Parameter(Name="MGR_GroupId", DbType="Int")] System.Nullable<int> mGR_GroupId, [Parameter(Name="MGR_Title", DbType="NVarChar(30)")] string mGR_Title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aSP_UserId, mGR_Type, mGR_GroupId, mGR_Title);
			return ((ISingleResult<hisp_UserMessagesGroup_UpdateResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_SetAnswered")]
		public int hisp_UserMessages_SetAnswered([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_SetForwarded")]
		public int hisp_UserMessages_SetForwarded([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_SetGroup")]
		public int hisp_UserMessages_SetGroup([Parameter(Name="MSG_MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> mSG_MsgID, [Parameter(Name="MGR_Type", DbType="Int")] System.Nullable<int> mGR_Type, [Parameter(Name="MGR_GroupId", DbType="Int")] System.Nullable<int> mGR_GroupId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mSG_MsgID, mGR_Type, mGR_GroupId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_SetRead")]
		public int hisp_UserMessages_SetRead([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_ToggleFlag")]
		public int hisp_UserMessages_ToggleFlag([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_SaveMessage")]
		public int hisp_UserMessages_SaveMessage([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [Parameter(Name="FromUserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> fromUserID, [Parameter(Name="TypOfMessage", DbType="Int")] System.Nullable<int> typOfMessage, [Parameter(Name="Subject", DbType="NVarChar(512)")] string subject, [Parameter(Name="Message", DbType="NText")] string message, [Parameter(Name="IsRead", DbType="Int")] System.Nullable<int> isRead, [Parameter(Name="ShowInInbox", DbType="Bit")] System.Nullable<bool> showInInbox, [Parameter(Name="ShowInOutbox", DbType="Bit")] System.Nullable<bool> showInOutbox, [Parameter(Name="XMLData", DbType="Xml")] System.Xml.Linq.XElement xMLData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID, userId, fromUserID, typOfMessage, subject, message, isRead, showInInbox, showInOutbox, xMLData);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetRequestUnreadCount")]
		public ISingleResult<hisp_UserMessages_GetRequestUnreadCountResult> hisp_UserMessages_GetRequestUnreadCount([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<hisp_UserMessages_GetRequestUnreadCountResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetMessagesUnreadCount")]
		public ISingleResult<hisp_UserMessages_GetMessagesUnreadCountResult> hisp_UserMessages_GetMessagesUnreadCount([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="GroupID", DbType="Int")] System.Nullable<int> groupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, groupID);
			return ((ISingleResult<hisp_UserMessages_GetMessagesUnreadCountResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_DeleteMessage")]
		public int hisp_UserMessages_DeleteMessage([Parameter(Name="MsgID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> msgID, [Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserMessages_GetAlertsUnreadCount")]
		public ISingleResult<hisp_UserMessages_GetAlertsUnreadCountResult> hisp_UserMessages_GetAlertsUnreadCount([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<hisp_UserMessages_GetAlertsUnreadCountResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_UserFriend_IsFriend")]
		public ISingleResult<hisp_UserFriend_IsFriendResult> hisp_UserFriend_IsFriend([Parameter(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [Parameter(Name="FriendID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> friendID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, friendID);
			return ((ISingleResult<hisp_UserFriend_IsFriendResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_TagWord_GetByWords")]
		public ISingleResult<hisp_TagWord_GetByWordsResult> hisp_TagWord_GetByWords([Parameter(Name="TagWords", DbType="NVarChar(MAX)")] string tagWords, [Parameter(DbType="NChar(1)")] System.Nullable<char> delim)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagWords, delim);
			return ((ISingleResult<hisp_TagWord_GetByWordsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_TagWord_GetIDByWord")]
		public ISingleResult<hisp_TagWord_GetIDByWordResult> hisp_TagWord_GetIDByWord([Parameter(Name="TGW_Wordlower", DbType="NVarChar(50)")] string tGW_Wordlower)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tGW_Wordlower);
			return ((ISingleResult<hisp_TagWord_GetIDByWordResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_TagWord_GetIDSByWords")]
		public int hisp_TagWord_GetIDSByWords1([Parameter(Name="TagWords", DbType="NVarChar(MAX)")] string tagWords)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagWords);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_DataObject_AddMemberCount")]
		public int hisp_DataObject_AddMemberCount([Parameter(Name="CTY_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> cTY_ID, [Parameter(Name="Count", DbType="Int")] System.Nullable<int> count)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cTY_ID, count);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Profile_IsUserOnline")]
		public ISingleResult<hisp_Profile_IsUserOnlineResult> hisp_Profile_IsUserOnline([Parameter(Name="Uid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uid, [Parameter(Name="MinutesSinceLastInActive", DbType="Int")] System.Nullable<int> minutesSinceLastInActive, [Parameter(Name="TimeWindow", DbType="DateTime")] System.Nullable<System.DateTime> timeWindow)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid, minutesSinceLastInActive, timeWindow);
			return ((ISingleResult<hisp_Profile_IsUserOnlineResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Community_IsUserMember")]
		public ISingleResult<hisp_Community_IsUserMemberResult> hisp_Community_IsUserMember([Parameter(Name="CommunityId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> communityId, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), communityId, userId);
			return ((ISingleResult<hisp_Community_IsUserMemberResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Widget_GetDetailWidgetPages")]
		public ISingleResult<hisp_Widget_GetDetailWidgetPagesResult> hisp_Widget_GetDetailWidgetPages([Parameter(Name="WidgetId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> widgetId, [Parameter(Name="XmlStateData", DbType="NVarChar(255)")] string xmlStateData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), widgetId, xmlStateData);
			return ((ISingleResult<hisp_Widget_GetDetailWidgetPagesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Widget_LoadInstanceData")]
		public ISingleResult<hisp_Widget_LoadInstanceDataResult1> hisp_Widget_LoadInstanceData1([Parameter(Name="INS_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iNS_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iNS_ID);
			return ((ISingleResult<hisp_Widget_LoadInstanceDataResult1>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Widget_SaveInstanceData")]
		public int hisp_Widget_SaveInstanceData1([Parameter(Name="INS_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iNS_ID, [Parameter(Name="INS_XmlStateData", DbType="NVarChar(MAX)")] string iNS_XmlStateData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iNS_ID, iNS_XmlStateData);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetTemplates_GetCommunityTemplates")]
		public ISingleResult<hisp_WidgetTemplates_GetCommunityTemplatesResult> hisp_WidgetTemplates_GetCommunityTemplates([Parameter(Name="CTY_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> cTY_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cTY_ID);
			return ((ISingleResult<hisp_WidgetTemplates_GetCommunityTemplatesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetInstance_ReorderColumns")]
		public int hisp_WidgetInstance_ReorderColumns([Parameter(Name="CtyId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> ctyId, [Parameter(Name="MaxColumn", DbType="Int")] System.Nullable<int> maxColumn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ctyId, maxColumn);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_WidgetInstance_ReorderByPageColumn")]
		public int hisp_WidgetInstance_ReorderByPageColumn([Parameter(Name="PageId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pageId, [Parameter(Name="ColumnID", DbType="Int")] System.Nullable<int> columnID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageId, columnID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Community_GetMaxPageOrder")]
		public ISingleResult<hisp_Community_GetMaxPageOrderResult> hisp_Community_GetMaxPageOrder([Parameter(Name="Community", DbType="UniqueIdentifier")] System.Nullable<System.Guid> community)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), community);
			return ((ISingleResult<hisp_Community_GetMaxPageOrderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Community_DeletePage")]
		public int hisp_Community_DeletePage([Parameter(Name="PageId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Partners_Load")]
		public ISingleResult<hisp_Partners_LoadResult> hisp_Partners_Load([Parameter(Name="PAR_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pAR_ID, [Parameter(Name="USR_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uSR_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pAR_ID, uSR_ID);
			return ((ISingleResult<hisp_Partners_LoadResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_Partners_Update")]
		public int hisp_Partners_Update([Parameter(Name="PAR_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pAR_ID, [Parameter(Name="PAR_Name", DbType="NVarChar(50)")] string pAR_Name, [Parameter(Name="CTY_ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> cTY_ID, [Parameter(Name="PAR_BaseUrlXSLT", DbType="NVarChar(128)")] string pAR_BaseUrlXSLT, [Parameter(Name="PAR_MapConfig", DbType="NVarChar(MAX)")] string pAR_MapConfig, [Parameter(Name="PAR_GeoServiceCalls", DbType="Int")] System.Nullable<int> pAR_GeoServiceCalls, [Parameter(Name="PAR_RESTCalls", DbType="Int")] System.Nullable<int> pAR_RESTCalls, [Parameter(Name="PAR_MonthlyGeoServiceCredits", DbType="Int")] System.Nullable<int> pAR_MonthlyGeoServiceCredits, [Parameter(Name="PAR_MonthlyRESTCredits", DbType="Int")] System.Nullable<int> pAR_MonthlyRESTCredits, [Parameter(Name="PAR_LastResetDate", DbType="DateTime")] System.Nullable<System.DateTime> pAR_LastResetDate, [Parameter(Name="PAR_MobileHeader", DbType="NVarChar(MAX)")] string pAR_MobileHeader, [Parameter(Name="PAR_MobileFooter", DbType="NVarChar(MAX)")] string pAR_MobileFooter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pAR_ID, pAR_Name, cTY_ID, pAR_BaseUrlXSLT, pAR_MapConfig, pAR_GeoServiceCalls, pAR_RESTCalls, pAR_MonthlyGeoServiceCredits, pAR_MonthlyRESTCredits, pAR_LastResetDate, pAR_MobileHeader, pAR_MobileFooter);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_DataObject_GetUserIDByFacebookUserId")]
		public ISingleResult<hisp_DataObject_GetUserIDByFacebookUserIdResult> hisp_DataObject_GetUserIDByFacebookUserId([Parameter(Name="FacebookUserId", DbType="NVarChar(255)")] string facebookUserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facebookUserId);
			return ((ISingleResult<hisp_DataObject_GetUserIDByFacebookUserIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_DataObject_GetUserIDByPPID")]
		public ISingleResult<hisp_DataObject_GetUserIDByPPIDResult> hisp_DataObject_GetUserIDByPPID([Parameter(Name="PPID", DbType="NVarChar(255)")] string pPID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pPID);
			return ((ISingleResult<hisp_DataObject_GetUserIDByPPIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.hisp_DataObject_GetUserIDByOpenID")]
		public ISingleResult<hisp_DataObject_GetUserIDByOpenIDResult> hisp_DataObject_GetUserIDByOpenID([Parameter(Name="OpenID", DbType="NVarChar(255)")] string openID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), openID);
			return ((ISingleResult<hisp_DataObject_GetUserIDByOpenIDResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.hitbl_NavigationStructure_NST")]
	public partial class hitbl_NavigationStructure_NST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NST_ID;
		
		private string _NST_KeyName;
		
		private string _NST_XMLStruct;
		
		private bool _NST_IsDirty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNST_IDChanging(System.Guid value);
    partial void OnNST_IDChanged();
    partial void OnNST_KeyNameChanging(string value);
    partial void OnNST_KeyNameChanged();
    partial void OnNST_XMLStructChanging(string value);
    partial void OnNST_XMLStructChanged();
    partial void OnNST_IsDirtyChanging(bool value);
    partial void OnNST_IsDirtyChanged();
    #endregion
		
		public hitbl_NavigationStructure_NST()
		{
			OnCreated();
		}
		
		[Column(Storage="_NST_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NST_ID
		{
			get
			{
				return this._NST_ID;
			}
			set
			{
				if ((this._NST_ID != value))
				{
					this.OnNST_IDChanging(value);
					this.SendPropertyChanging();
					this._NST_ID = value;
					this.SendPropertyChanged("NST_ID");
					this.OnNST_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NST_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NST_KeyName
		{
			get
			{
				return this._NST_KeyName;
			}
			set
			{
				if ((this._NST_KeyName != value))
				{
					this.OnNST_KeyNameChanging(value);
					this.SendPropertyChanging();
					this._NST_KeyName = value;
					this.SendPropertyChanged("NST_KeyName");
					this.OnNST_KeyNameChanged();
				}
			}
		}
		
		[Column(Storage="_NST_XMLStruct", DbType="NVarChar(MAX)")]
		public string NST_XMLStruct
		{
			get
			{
				return this._NST_XMLStruct;
			}
			set
			{
				if ((this._NST_XMLStruct != value))
				{
					this.OnNST_XMLStructChanging(value);
					this.SendPropertyChanging();
					this._NST_XMLStruct = value;
					this.SendPropertyChanged("NST_XMLStruct");
					this.OnNST_XMLStructChanged();
				}
			}
		}
		
		[Column(Storage="_NST_IsDirty", DbType="Bit NOT NULL")]
		public bool NST_IsDirty
		{
			get
			{
				return this._NST_IsDirty;
			}
			set
			{
				if ((this._NST_IsDirty != value))
				{
					this.OnNST_IsDirtyChanging(value);
					this.SendPropertyChanging();
					this._NST_IsDirty = value;
					this.SendPropertyChanged("NST_IsDirty");
					this.OnNST_IsDirtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_Notification_RegisteredEvent_NRE")]
	public partial class hitbl_Notification_RegisteredEvent_NRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NRE_ID;
		
		private System.Guid _NUS_USR_ID;
		
		private int _NRE_IsGlobal;
		
		private int _NRE_Identifier;
		
		private System.Guid _NRE_ForObjectID;
		
		private string _NRE_ForObjectType;
		
		private string _NRE_Title;
		
		private int _NRE_Carrier;
		
		private int _NRE_CarrierCollect;
		
		private int _NRE_CollectValue;
		
		private System.DateTime _NRE_AddDate;
		
		private System.Nullable<System.DateTime> _NRE_NextSend;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNRE_IDChanging(System.Guid value);
    partial void OnNRE_IDChanged();
    partial void OnNUS_USR_IDChanging(System.Guid value);
    partial void OnNUS_USR_IDChanged();
    partial void OnNRE_IsGlobalChanging(int value);
    partial void OnNRE_IsGlobalChanged();
    partial void OnNRE_IdentifierChanging(int value);
    partial void OnNRE_IdentifierChanged();
    partial void OnNRE_ForObjectIDChanging(System.Guid value);
    partial void OnNRE_ForObjectIDChanged();
    partial void OnNRE_ForObjectTypeChanging(string value);
    partial void OnNRE_ForObjectTypeChanged();
    partial void OnNRE_TitleChanging(string value);
    partial void OnNRE_TitleChanged();
    partial void OnNRE_CarrierChanging(int value);
    partial void OnNRE_CarrierChanged();
    partial void OnNRE_CarrierCollectChanging(int value);
    partial void OnNRE_CarrierCollectChanged();
    partial void OnNRE_CollectValueChanging(int value);
    partial void OnNRE_CollectValueChanged();
    partial void OnNRE_AddDateChanging(System.DateTime value);
    partial void OnNRE_AddDateChanged();
    partial void OnNRE_NextSendChanging(System.Nullable<System.DateTime> value);
    partial void OnNRE_NextSendChanged();
    #endregion
		
		public hitbl_Notification_RegisteredEvent_NRE()
		{
			OnCreated();
		}
		
		[Column(Storage="_NRE_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NRE_ID
		{
			get
			{
				return this._NRE_ID;
			}
			set
			{
				if ((this._NRE_ID != value))
				{
					this.OnNRE_IDChanging(value);
					this.SendPropertyChanging();
					this._NRE_ID = value;
					this.SendPropertyChanged("NRE_ID");
					this.OnNRE_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NUS_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NUS_USR_ID
		{
			get
			{
				return this._NUS_USR_ID;
			}
			set
			{
				if ((this._NUS_USR_ID != value))
				{
					this.OnNUS_USR_IDChanging(value);
					this.SendPropertyChanging();
					this._NUS_USR_ID = value;
					this.SendPropertyChanged("NUS_USR_ID");
					this.OnNUS_USR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_IsGlobal", DbType="Int NOT NULL")]
		public int NRE_IsGlobal
		{
			get
			{
				return this._NRE_IsGlobal;
			}
			set
			{
				if ((this._NRE_IsGlobal != value))
				{
					this.OnNRE_IsGlobalChanging(value);
					this.SendPropertyChanging();
					this._NRE_IsGlobal = value;
					this.SendPropertyChanged("NRE_IsGlobal");
					this.OnNRE_IsGlobalChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_Identifier", DbType="Int NOT NULL")]
		public int NRE_Identifier
		{
			get
			{
				return this._NRE_Identifier;
			}
			set
			{
				if ((this._NRE_Identifier != value))
				{
					this.OnNRE_IdentifierChanging(value);
					this.SendPropertyChanging();
					this._NRE_Identifier = value;
					this.SendPropertyChanged("NRE_Identifier");
					this.OnNRE_IdentifierChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_ForObjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NRE_ForObjectID
		{
			get
			{
				return this._NRE_ForObjectID;
			}
			set
			{
				if ((this._NRE_ForObjectID != value))
				{
					this.OnNRE_ForObjectIDChanging(value);
					this.SendPropertyChanging();
					this._NRE_ForObjectID = value;
					this.SendPropertyChanged("NRE_ForObjectID");
					this.OnNRE_ForObjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_ForObjectType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NRE_ForObjectType
		{
			get
			{
				return this._NRE_ForObjectType;
			}
			set
			{
				if ((this._NRE_ForObjectType != value))
				{
					this.OnNRE_ForObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._NRE_ForObjectType = value;
					this.SendPropertyChanged("NRE_ForObjectType");
					this.OnNRE_ForObjectTypeChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_Title", DbType="NVarChar(100)")]
		public string NRE_Title
		{
			get
			{
				return this._NRE_Title;
			}
			set
			{
				if ((this._NRE_Title != value))
				{
					this.OnNRE_TitleChanging(value);
					this.SendPropertyChanging();
					this._NRE_Title = value;
					this.SendPropertyChanged("NRE_Title");
					this.OnNRE_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_Carrier", DbType="Int NOT NULL")]
		public int NRE_Carrier
		{
			get
			{
				return this._NRE_Carrier;
			}
			set
			{
				if ((this._NRE_Carrier != value))
				{
					this.OnNRE_CarrierChanging(value);
					this.SendPropertyChanging();
					this._NRE_Carrier = value;
					this.SendPropertyChanged("NRE_Carrier");
					this.OnNRE_CarrierChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_CarrierCollect", DbType="Int NOT NULL")]
		public int NRE_CarrierCollect
		{
			get
			{
				return this._NRE_CarrierCollect;
			}
			set
			{
				if ((this._NRE_CarrierCollect != value))
				{
					this.OnNRE_CarrierCollectChanging(value);
					this.SendPropertyChanging();
					this._NRE_CarrierCollect = value;
					this.SendPropertyChanged("NRE_CarrierCollect");
					this.OnNRE_CarrierCollectChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_CollectValue", DbType="Int NOT NULL")]
		public int NRE_CollectValue
		{
			get
			{
				return this._NRE_CollectValue;
			}
			set
			{
				if ((this._NRE_CollectValue != value))
				{
					this.OnNRE_CollectValueChanging(value);
					this.SendPropertyChanging();
					this._NRE_CollectValue = value;
					this.SendPropertyChanged("NRE_CollectValue");
					this.OnNRE_CollectValueChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_AddDate", DbType="DateTime NOT NULL")]
		public System.DateTime NRE_AddDate
		{
			get
			{
				return this._NRE_AddDate;
			}
			set
			{
				if ((this._NRE_AddDate != value))
				{
					this.OnNRE_AddDateChanging(value);
					this.SendPropertyChanging();
					this._NRE_AddDate = value;
					this.SendPropertyChanged("NRE_AddDate");
					this.OnNRE_AddDateChanged();
				}
			}
		}
		
		[Column(Storage="_NRE_NextSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> NRE_NextSend
		{
			get
			{
				return this._NRE_NextSend;
			}
			set
			{
				if ((this._NRE_NextSend != value))
				{
					this.OnNRE_NextSendChanging(value);
					this.SendPropertyChanging();
					this._NRE_NextSend = value;
					this.SendPropertyChanged("NRE_NextSend");
					this.OnNRE_NextSendChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hirel_Community_User_CUR")]
	public partial class hirel_Community_User_CUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CTY_ID;
		
		private System.Guid _USR_ID;
		
		private bool _CUR_IsOwner;
		
		private System.Nullable<int> _CUR_Status;
		
		private System.Nullable<System.DateTime> _CUR_InsertedDate;
		
		private System.Nullable<System.Guid> _USR_ID_InvitedBy;
		
		private EntityRef<hitbl_Community_CTY> _hitbl_Community_CTY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTY_IDChanging(System.Guid value);
    partial void OnCTY_IDChanged();
    partial void OnUSR_IDChanging(System.Guid value);
    partial void OnUSR_IDChanged();
    partial void OnCUR_IsOwnerChanging(bool value);
    partial void OnCUR_IsOwnerChanged();
    partial void OnCUR_StatusChanging(System.Nullable<int> value);
    partial void OnCUR_StatusChanged();
    partial void OnCUR_InsertedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCUR_InsertedDateChanged();
    partial void OnUSR_ID_InvitedByChanging(System.Nullable<System.Guid> value);
    partial void OnUSR_ID_InvitedByChanged();
    #endregion
		
		public hirel_Community_User_CUR()
		{
			this._hitbl_Community_CTY = default(EntityRef<hitbl_Community_CTY>);
			OnCreated();
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					if (this._hitbl_Community_CTY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this.OnUSR_IDChanging(value);
					this.SendPropertyChanging();
					this._USR_ID = value;
					this.SendPropertyChanged("USR_ID");
					this.OnUSR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CUR_IsOwner", DbType="Bit NOT NULL")]
		public bool CUR_IsOwner
		{
			get
			{
				return this._CUR_IsOwner;
			}
			set
			{
				if ((this._CUR_IsOwner != value))
				{
					this.OnCUR_IsOwnerChanging(value);
					this.SendPropertyChanging();
					this._CUR_IsOwner = value;
					this.SendPropertyChanged("CUR_IsOwner");
					this.OnCUR_IsOwnerChanged();
				}
			}
		}
		
		[Column(Storage="_CUR_Status", DbType="Int")]
		public System.Nullable<int> CUR_Status
		{
			get
			{
				return this._CUR_Status;
			}
			set
			{
				if ((this._CUR_Status != value))
				{
					this.OnCUR_StatusChanging(value);
					this.SendPropertyChanging();
					this._CUR_Status = value;
					this.SendPropertyChanged("CUR_Status");
					this.OnCUR_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_CUR_InsertedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CUR_InsertedDate
		{
			get
			{
				return this._CUR_InsertedDate;
			}
			set
			{
				if ((this._CUR_InsertedDate != value))
				{
					this.OnCUR_InsertedDateChanging(value);
					this.SendPropertyChanging();
					this._CUR_InsertedDate = value;
					this.SendPropertyChanged("CUR_InsertedDate");
					this.OnCUR_InsertedDateChanged();
				}
			}
		}
		
		[Column(Storage="_USR_ID_InvitedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USR_ID_InvitedBy
		{
			get
			{
				return this._USR_ID_InvitedBy;
			}
			set
			{
				if ((this._USR_ID_InvitedBy != value))
				{
					this.OnUSR_ID_InvitedByChanging(value);
					this.SendPropertyChanging();
					this._USR_ID_InvitedBy = value;
					this.SendPropertyChanged("USR_ID_InvitedBy");
					this.OnUSR_ID_InvitedByChanged();
				}
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hirel_Community_User_CUR", Storage="_hitbl_Community_CTY", ThisKey="CTY_ID", OtherKey="CTY_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public hitbl_Community_CTY hitbl_Community_CTY
		{
			get
			{
				return this._hitbl_Community_CTY.Entity;
			}
			set
			{
				hitbl_Community_CTY previousValue = this._hitbl_Community_CTY.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_Community_CTY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_Community_CTY.Entity = null;
						previousValue.hirel_Community_User_CURs.Remove(this);
					}
					this._hitbl_Community_CTY.Entity = value;
					if ((value != null))
					{
						value.hirel_Community_User_CURs.Add(this);
						this._CTY_ID = value.CTY_ID;
					}
					else
					{
						this._CTY_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_Community_CTY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_UserFriends_FRI")]
	public partial class hitbl_UserFriends_FRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ASP_UserId;
		
		private System.Guid _ASP_FriendId;
		
		private int _UFR_TypeID;
		
		private System.DateTime _FRI_DateAdded;
		
		private int _FRI_Blocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnASP_UserIdChanging(System.Guid value);
    partial void OnASP_UserIdChanged();
    partial void OnASP_FriendIdChanging(System.Guid value);
    partial void OnASP_FriendIdChanged();
    partial void OnUFR_TypeIDChanging(int value);
    partial void OnUFR_TypeIDChanged();
    partial void OnFRI_DateAddedChanging(System.DateTime value);
    partial void OnFRI_DateAddedChanged();
    partial void OnFRI_BlockedChanging(int value);
    partial void OnFRI_BlockedChanged();
    #endregion
		
		public hitbl_UserFriends_FRI()
		{
			OnCreated();
		}
		
		[Column(Storage="_ASP_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ASP_UserId
		{
			get
			{
				return this._ASP_UserId;
			}
			set
			{
				if ((this._ASP_UserId != value))
				{
					this.OnASP_UserIdChanging(value);
					this.SendPropertyChanging();
					this._ASP_UserId = value;
					this.SendPropertyChanged("ASP_UserId");
					this.OnASP_UserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ASP_FriendId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ASP_FriendId
		{
			get
			{
				return this._ASP_FriendId;
			}
			set
			{
				if ((this._ASP_FriendId != value))
				{
					this.OnASP_FriendIdChanging(value);
					this.SendPropertyChanging();
					this._ASP_FriendId = value;
					this.SendPropertyChanged("ASP_FriendId");
					this.OnASP_FriendIdChanged();
				}
			}
		}
		
		[Column(Storage="_UFR_TypeID", DbType="Int NOT NULL")]
		public int UFR_TypeID
		{
			get
			{
				return this._UFR_TypeID;
			}
			set
			{
				if ((this._UFR_TypeID != value))
				{
					this.OnUFR_TypeIDChanging(value);
					this.SendPropertyChanging();
					this._UFR_TypeID = value;
					this.SendPropertyChanged("UFR_TypeID");
					this.OnUFR_TypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_FRI_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime FRI_DateAdded
		{
			get
			{
				return this._FRI_DateAdded;
			}
			set
			{
				if ((this._FRI_DateAdded != value))
				{
					this.OnFRI_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._FRI_DateAdded = value;
					this.SendPropertyChanged("FRI_DateAdded");
					this.OnFRI_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_FRI_Blocked", DbType="Int NOT NULL")]
		public int FRI_Blocked
		{
			get
			{
				return this._FRI_Blocked;
			}
			set
			{
				if ((this._FRI_Blocked != value))
				{
					this.OnFRI_BlockedChanging(value);
					this.SendPropertyChanging();
					this._FRI_Blocked = value;
					this.SendPropertyChanged("FRI_Blocked");
					this.OnFRI_BlockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="")]
	public partial class MessageResult
	{
		
		private System.Nullable<long> _RowNum;
		
		private System.Guid _MSG_MsgID;
		
		private System.Guid _ASP_UserId;
		
		private System.Guid _ASP_FromUserID;
		
		private int _MSG_TypOfMessage;
		
		private System.DateTime _MSG_DateSent;
		
		private string _MSG_Subject;
		
		private string _MSG_Message;
		
		private int _MSG_IsRead;
		
		private bool _MSG_ShowInInbox;
		
		private bool _MSG_ShowInOutbox;
		
		private bool _MSG_Flagged;
		
		private bool _MSG_Answered;
		
		private bool _MSG_Forwarded;
		
		private int _MGR_GroupId_In;
		
		private int _MGR_GroupId_Out;
		
		private System.Xml.Linq.XElement _MSG_XMLData;
		
		private string _UserName;
		
		private string _FromUserName;
		
		public MessageResult()
		{
		}
		
		[Column(Storage="_RowNum", DbType="BigInt")]
		public System.Nullable<long> RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this._RowNum = value;
				}
			}
		}
		
		[Column(Storage="_MSG_MsgID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MSG_MsgID
		{
			get
			{
				return this._MSG_MsgID;
			}
			set
			{
				if ((this._MSG_MsgID != value))
				{
					this._MSG_MsgID = value;
				}
			}
		}
		
		[Column(Storage="_ASP_UserId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ASP_UserId
		{
			get
			{
				return this._ASP_UserId;
			}
			set
			{
				if ((this._ASP_UserId != value))
				{
					this._ASP_UserId = value;
				}
			}
		}
		
		[Column(Storage="_ASP_FromUserID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ASP_FromUserID
		{
			get
			{
				return this._ASP_FromUserID;
			}
			set
			{
				if ((this._ASP_FromUserID != value))
				{
					this._ASP_FromUserID = value;
				}
			}
		}
		
		[Column(Storage="_MSG_TypOfMessage", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MSG_TypOfMessage
		{
			get
			{
				return this._MSG_TypOfMessage;
			}
			set
			{
				if ((this._MSG_TypOfMessage != value))
				{
					this._MSG_TypOfMessage = value;
				}
			}
		}
		
		[Column(Storage="_MSG_DateSent", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime MSG_DateSent
		{
			get
			{
				return this._MSG_DateSent;
			}
			set
			{
				if ((this._MSG_DateSent != value))
				{
					this._MSG_DateSent = value;
				}
			}
		}
		
		[Column(Storage="_MSG_Subject", DbType="NVarChar(512) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MSG_Subject
		{
			get
			{
				return this._MSG_Subject;
			}
			set
			{
				if ((this._MSG_Subject != value))
				{
					this._MSG_Subject = value;
				}
			}
		}
		
		[Column(Storage="_MSG_Message", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MSG_Message
		{
			get
			{
				return this._MSG_Message;
			}
			set
			{
				if ((this._MSG_Message != value))
				{
					this._MSG_Message = value;
				}
			}
		}
		
		[Column(Storage="_MSG_IsRead", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MSG_IsRead
		{
			get
			{
				return this._MSG_IsRead;
			}
			set
			{
				if ((this._MSG_IsRead != value))
				{
					this._MSG_IsRead = value;
				}
			}
		}
		
		[Column(Storage="_MSG_ShowInInbox", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MSG_ShowInInbox
		{
			get
			{
				return this._MSG_ShowInInbox;
			}
			set
			{
				if ((this._MSG_ShowInInbox != value))
				{
					this._MSG_ShowInInbox = value;
				}
			}
		}
		
		[Column(Storage="_MSG_ShowInOutbox", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MSG_ShowInOutbox
		{
			get
			{
				return this._MSG_ShowInOutbox;
			}
			set
			{
				if ((this._MSG_ShowInOutbox != value))
				{
					this._MSG_ShowInOutbox = value;
				}
			}
		}
		
		[Column(Storage="_MSG_Flagged", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MSG_Flagged
		{
			get
			{
				return this._MSG_Flagged;
			}
			set
			{
				if ((this._MSG_Flagged != value))
				{
					this._MSG_Flagged = value;
				}
			}
		}
		
		[Column(Storage="_MSG_Answered", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MSG_Answered
		{
			get
			{
				return this._MSG_Answered;
			}
			set
			{
				if ((this._MSG_Answered != value))
				{
					this._MSG_Answered = value;
				}
			}
		}
		
		[Column(Storage="_MSG_Forwarded", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MSG_Forwarded
		{
			get
			{
				return this._MSG_Forwarded;
			}
			set
			{
				if ((this._MSG_Forwarded != value))
				{
					this._MSG_Forwarded = value;
				}
			}
		}
		
		[Column(Storage="_MGR_GroupId_In", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MGR_GroupId_In
		{
			get
			{
				return this._MGR_GroupId_In;
			}
			set
			{
				if ((this._MGR_GroupId_In != value))
				{
					this._MGR_GroupId_In = value;
				}
			}
		}
		
		[Column(Storage="_MGR_GroupId_Out", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MGR_GroupId_Out
		{
			get
			{
				return this._MGR_GroupId_Out;
			}
			set
			{
				if ((this._MGR_GroupId_Out != value))
				{
					this._MGR_GroupId_Out = value;
				}
			}
		}
		
		[Column(Storage="_MSG_XMLData", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement MSG_XMLData
		{
			get
			{
				return this._MSG_XMLData;
			}
			set
			{
				if ((this._MSG_XMLData != value))
				{
					this._MSG_XMLData = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_FromUserName", DbType="NVarChar(256) ")]
		public string FromUserName
		{
			get
			{
				return this._FromUserName;
			}
			set
			{
				if ((this._FromUserName != value))
				{
					this._FromUserName = value;
				}
			}
		}
	}
	
	[Table(Name="")]
	public partial class CommentResult
	{
		
		private System.Guid _COM_ID;
		
		private System.Guid _OBJ_ID;
		
		private System.Guid _USR_ID;
		
		private string _UserName;
		
		private string _COM_Text;
		
		private int _COM_Status;
		
		private System.DateTime _COM_InsertedDate;
		
		private System.Nullable<System.DateTime> _COM_UpdatedDate;
		
		private int _OBJ_Type;
		
		public CommentResult()
		{
		}
		
		[Column(Storage="_COM_ID")]
		public System.Guid COM_ID
		{
			get
			{
				return this._COM_ID;
			}
			set
			{
				if ((this._COM_ID != value))
				{
					this._COM_ID = value;
				}
			}
		}
		
		[Column(Storage="_OBJ_ID")]
		public System.Guid OBJ_ID
		{
			get
			{
				return this._OBJ_ID;
			}
			set
			{
				if ((this._OBJ_ID != value))
				{
					this._OBJ_ID = value;
				}
			}
		}
		
		[Column(Storage="_USR_ID")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
		
		[Column(Storage="_UserName", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_COM_Text", CanBeNull=false)]
		public string COM_Text
		{
			get
			{
				return this._COM_Text;
			}
			set
			{
				if ((this._COM_Text != value))
				{
					this._COM_Text = value;
				}
			}
		}
		
		[Column(Storage="_COM_Status")]
		public int COM_Status
		{
			get
			{
				return this._COM_Status;
			}
			set
			{
				if ((this._COM_Status != value))
				{
					this._COM_Status = value;
				}
			}
		}
		
		[Column(Storage="_COM_InsertedDate")]
		public System.DateTime COM_InsertedDate
		{
			get
			{
				return this._COM_InsertedDate;
			}
			set
			{
				if ((this._COM_InsertedDate != value))
				{
					this._COM_InsertedDate = value;
				}
			}
		}
		
		[Column(Storage="_COM_UpdatedDate")]
		public System.Nullable<System.DateTime> COM_UpdatedDate
		{
			get
			{
				return this._COM_UpdatedDate;
			}
			set
			{
				if ((this._COM_UpdatedDate != value))
				{
					this._COM_UpdatedDate = value;
				}
			}
		}
		
		[Column(Storage="_OBJ_Type")]
		public int OBJ_Type
		{
			get
			{
				return this._OBJ_Type;
			}
			set
			{
				if ((this._OBJ_Type != value))
				{
					this._OBJ_Type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.hitbl_DataObject_OBJ")]
	public partial class hitbl_DataObject_OBJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OBJ_ID;
		
		private System.Guid _USR_ID;
		
		private string _USR_Nickname;
		
		private string _OBJ_EXT_ID;
		
		private System.Nullable<System.Guid> _PAR_ID;
		
		private System.Nullable<System.Guid> _INS_ID;
		
		private System.Nullable<System.Guid> _CTY_ID;
		
		private int _OBJ_Type;
		
		private int _OBJ_Status;
		
		private int _OBJ_ShowState;
		
		private System.Nullable<System.Guid> _OBJ_Parent_OBJ_ID;
		
		private System.Nullable<int> _OBJ_RoleRight;
		
		private int _OBJ_Featured;
		
		private string _OBJ_Title;
		
		private string _OBJ_Description;
		
		private string _OBJ_DescriptionLinked;
		
		private string _OBJ_DescriptionMobile;
		
		private string _OBJ_URLImageSmall;
		
		private System.Nullable<int> _OBJ_Copyright;
		
		private string _OBJ_TagList;
		
		private System.Nullable<System.DateTime> _OBJ_StatisticUpdate;
		
		private string _OBJ_LangCode;
		
		private System.DateTime _OBJ_InsertedDate;
		
		private System.Nullable<System.DateTime> _OBJ_UpdatedDate;
		
		private System.Nullable<System.Guid> _OBJ_InsertedBy;
		
		private System.Nullable<System.Guid> _OBJ_UpdatedBy;
		
		private int _OBJ_ViewCount;
		
		private int _OBJ_RatedCount;
		
		private int _OBJ_RatingAmount;
		
		private decimal _OBJ_RatedAverage;
		
		private decimal _OBJ_RatedConsolidated;
		
		private int _OBJ_CommentCount;
		
		private int _OBJ_IncentivePoints;
		
		private int _OBJ_MemberCount;
		
		private int _OBJ_Agility;
		
		private System.Xml.Linq.XElement _OBJ_SpezialXml;
		
		private System.Nullable<System.Guid> _OBJ_OriginalObjID;
		
		private string _OBJ_Country_ISO;
		
		private string _OBJ_Region;
		
		private string _OBJ_Street;
		
		private string _OBJ_Zip;
		
		private string _OBJ_City;
		
		private System.Nullable<double> _OBJ_Geo_Lat;
		
		private System.Nullable<double> _OBJ_Geo_Long;
		
		private System.Nullable<System.Guid> _OBJ_GroupID;
		
		private System.Nullable<System.DateTime> _OBJ_StartDate;
		
		private System.Nullable<System.DateTime> _OBJ_EndDate;
		
		private string _OBJ_URL_XSLT;
		
		private EntitySet<hitbl_Partners_PAR> _hitbl_Partners_PARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOBJ_IDChanging(System.Guid value);
    partial void OnOBJ_IDChanged();
    partial void OnUSR_IDChanging(System.Guid value);
    partial void OnUSR_IDChanged();
    partial void OnUSR_NicknameChanging(string value);
    partial void OnUSR_NicknameChanged();
    partial void OnOBJ_EXT_IDChanging(string value);
    partial void OnOBJ_EXT_IDChanged();
    partial void OnPAR_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPAR_IDChanged();
    partial void OnINS_IDChanging(System.Nullable<System.Guid> value);
    partial void OnINS_IDChanged();
    partial void OnCTY_IDChanging(System.Nullable<System.Guid> value);
    partial void OnCTY_IDChanged();
    partial void OnOBJ_TypeChanging(int value);
    partial void OnOBJ_TypeChanged();
    partial void OnOBJ_StatusChanging(int value);
    partial void OnOBJ_StatusChanged();
    partial void OnOBJ_ShowStateChanging(int value);
    partial void OnOBJ_ShowStateChanged();
    partial void OnOBJ_Parent_OBJ_IDChanging(System.Nullable<System.Guid> value);
    partial void OnOBJ_Parent_OBJ_IDChanged();
    partial void OnOBJ_RoleRightChanging(System.Nullable<int> value);
    partial void OnOBJ_RoleRightChanged();
    partial void OnOBJ_FeaturedChanging(int value);
    partial void OnOBJ_FeaturedChanged();
    partial void OnOBJ_TitleChanging(string value);
    partial void OnOBJ_TitleChanged();
    partial void OnOBJ_DescriptionChanging(string value);
    partial void OnOBJ_DescriptionChanged();
    partial void OnOBJ_DescriptionLinkedChanging(string value);
    partial void OnOBJ_DescriptionLinkedChanged();
    partial void OnOBJ_DescriptionMobileChanging(string value);
    partial void OnOBJ_DescriptionMobileChanged();
    partial void OnOBJ_URLImageSmallChanging(string value);
    partial void OnOBJ_URLImageSmallChanged();
    partial void OnOBJ_CopyrightChanging(System.Nullable<int> value);
    partial void OnOBJ_CopyrightChanged();
    partial void OnOBJ_TagListChanging(string value);
    partial void OnOBJ_TagListChanged();
    partial void OnOBJ_StatisticUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnOBJ_StatisticUpdateChanged();
    partial void OnOBJ_LangCodeChanging(string value);
    partial void OnOBJ_LangCodeChanged();
    partial void OnOBJ_InsertedDateChanging(System.DateTime value);
    partial void OnOBJ_InsertedDateChanged();
    partial void OnOBJ_UpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOBJ_UpdatedDateChanged();
    partial void OnOBJ_InsertedByChanging(System.Nullable<System.Guid> value);
    partial void OnOBJ_InsertedByChanged();
    partial void OnOBJ_UpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnOBJ_UpdatedByChanged();
    partial void OnOBJ_ViewCountChanging(int value);
    partial void OnOBJ_ViewCountChanged();
    partial void OnOBJ_RatedCountChanging(int value);
    partial void OnOBJ_RatedCountChanged();
    partial void OnOBJ_RatingAmountChanging(int value);
    partial void OnOBJ_RatingAmountChanged();
    partial void OnOBJ_RatedAverageChanging(decimal value);
    partial void OnOBJ_RatedAverageChanged();
    partial void OnOBJ_RatedConsolidatedChanging(decimal value);
    partial void OnOBJ_RatedConsolidatedChanged();
    partial void OnOBJ_CommentCountChanging(int value);
    partial void OnOBJ_CommentCountChanged();
    partial void OnOBJ_IncentivePointsChanging(int value);
    partial void OnOBJ_IncentivePointsChanged();
    partial void OnOBJ_MemberCountChanging(int value);
    partial void OnOBJ_MemberCountChanged();
    partial void OnOBJ_AgilityChanging(int value);
    partial void OnOBJ_AgilityChanged();
    partial void OnOBJ_SpezialXmlChanging(System.Xml.Linq.XElement value);
    partial void OnOBJ_SpezialXmlChanged();
    partial void OnOBJ_OriginalObjIDChanging(System.Nullable<System.Guid> value);
    partial void OnOBJ_OriginalObjIDChanged();
    partial void OnOBJ_Country_ISOChanging(string value);
    partial void OnOBJ_Country_ISOChanged();
    partial void OnOBJ_RegionChanging(string value);
    partial void OnOBJ_RegionChanged();
    partial void OnOBJ_StreetChanging(string value);
    partial void OnOBJ_StreetChanged();
    partial void OnOBJ_ZipChanging(string value);
    partial void OnOBJ_ZipChanged();
    partial void OnOBJ_CityChanging(string value);
    partial void OnOBJ_CityChanged();
    partial void OnOBJ_Geo_LatChanging(System.Nullable<double> value);
    partial void OnOBJ_Geo_LatChanged();
    partial void OnOBJ_Geo_LongChanging(System.Nullable<double> value);
    partial void OnOBJ_Geo_LongChanged();
    partial void OnOBJ_GroupIDChanging(System.Nullable<System.Guid> value);
    partial void OnOBJ_GroupIDChanged();
    partial void OnOBJ_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOBJ_StartDateChanged();
    partial void OnOBJ_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOBJ_EndDateChanged();
    partial void OnOBJ_URL_XSLTChanging(string value);
    partial void OnOBJ_URL_XSLTChanged();
    #endregion
		
		public hitbl_DataObject_OBJ()
		{
			this._hitbl_Partners_PARs = new EntitySet<hitbl_Partners_PAR>(new Action<hitbl_Partners_PAR>(this.attach_hitbl_Partners_PARs), new Action<hitbl_Partners_PAR>(this.detach_hitbl_Partners_PARs));
			OnCreated();
		}
		
		[Column(Storage="_OBJ_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OBJ_ID
		{
			get
			{
				return this._OBJ_ID;
			}
			set
			{
				if ((this._OBJ_ID != value))
				{
					this.OnOBJ_IDChanging(value);
					this.SendPropertyChanging();
					this._OBJ_ID = value;
					this.SendPropertyChanged("OBJ_ID");
					this.OnOBJ_IDChanged();
				}
			}
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this.OnUSR_IDChanging(value);
					this.SendPropertyChanging();
					this._USR_ID = value;
					this.SendPropertyChanged("USR_ID");
					this.OnUSR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_USR_Nickname", DbType="NVarChar(256)")]
		public string USR_Nickname
		{
			get
			{
				return this._USR_Nickname;
			}
			set
			{
				if ((this._USR_Nickname != value))
				{
					this.OnUSR_NicknameChanging(value);
					this.SendPropertyChanging();
					this._USR_Nickname = value;
					this.SendPropertyChanged("USR_Nickname");
					this.OnUSR_NicknameChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_EXT_ID", DbType="NVarChar(1024)")]
		public string OBJ_EXT_ID
		{
			get
			{
				return this._OBJ_EXT_ID;
			}
			set
			{
				if ((this._OBJ_EXT_ID != value))
				{
					this.OnOBJ_EXT_IDChanging(value);
					this.SendPropertyChanging();
					this._OBJ_EXT_ID = value;
					this.SendPropertyChanged("OBJ_EXT_ID");
					this.OnOBJ_EXT_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PAR_ID
		{
			get
			{
				return this._PAR_ID;
			}
			set
			{
				if ((this._PAR_ID != value))
				{
					this.OnPAR_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_ID = value;
					this.SendPropertyChanged("PAR_ID");
					this.OnPAR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_INS_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> INS_ID
		{
			get
			{
				return this._INS_ID;
			}
			set
			{
				if ((this._INS_ID != value))
				{
					this.OnINS_IDChanging(value);
					this.SendPropertyChanging();
					this._INS_ID = value;
					this.SendPropertyChanged("INS_ID");
					this.OnINS_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Type", DbType="Int NOT NULL")]
		public int OBJ_Type
		{
			get
			{
				return this._OBJ_Type;
			}
			set
			{
				if ((this._OBJ_Type != value))
				{
					this.OnOBJ_TypeChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Type = value;
					this.SendPropertyChanged("OBJ_Type");
					this.OnOBJ_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Status", DbType="Int NOT NULL")]
		public int OBJ_Status
		{
			get
			{
				return this._OBJ_Status;
			}
			set
			{
				if ((this._OBJ_Status != value))
				{
					this.OnOBJ_StatusChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Status = value;
					this.SendPropertyChanged("OBJ_Status");
					this.OnOBJ_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_ShowState", DbType="Int NOT NULL")]
		public int OBJ_ShowState
		{
			get
			{
				return this._OBJ_ShowState;
			}
			set
			{
				if ((this._OBJ_ShowState != value))
				{
					this.OnOBJ_ShowStateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_ShowState = value;
					this.SendPropertyChanged("OBJ_ShowState");
					this.OnOBJ_ShowStateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Parent_OBJ_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OBJ_Parent_OBJ_ID
		{
			get
			{
				return this._OBJ_Parent_OBJ_ID;
			}
			set
			{
				if ((this._OBJ_Parent_OBJ_ID != value))
				{
					this.OnOBJ_Parent_OBJ_IDChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Parent_OBJ_ID = value;
					this.SendPropertyChanged("OBJ_Parent_OBJ_ID");
					this.OnOBJ_Parent_OBJ_IDChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_RoleRight", DbType="Int")]
		public System.Nullable<int> OBJ_RoleRight
		{
			get
			{
				return this._OBJ_RoleRight;
			}
			set
			{
				if ((this._OBJ_RoleRight != value))
				{
					this.OnOBJ_RoleRightChanging(value);
					this.SendPropertyChanging();
					this._OBJ_RoleRight = value;
					this.SendPropertyChanged("OBJ_RoleRight");
					this.OnOBJ_RoleRightChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Featured", DbType="Int NOT NULL")]
		public int OBJ_Featured
		{
			get
			{
				return this._OBJ_Featured;
			}
			set
			{
				if ((this._OBJ_Featured != value))
				{
					this.OnOBJ_FeaturedChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Featured = value;
					this.SendPropertyChanged("OBJ_Featured");
					this.OnOBJ_FeaturedChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OBJ_Title
		{
			get
			{
				return this._OBJ_Title;
			}
			set
			{
				if ((this._OBJ_Title != value))
				{
					this.OnOBJ_TitleChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Title = value;
					this.SendPropertyChanged("OBJ_Title");
					this.OnOBJ_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Description", DbType="NVarChar(MAX)")]
		public string OBJ_Description
		{
			get
			{
				return this._OBJ_Description;
			}
			set
			{
				if ((this._OBJ_Description != value))
				{
					this.OnOBJ_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Description = value;
					this.SendPropertyChanged("OBJ_Description");
					this.OnOBJ_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_DescriptionLinked", DbType="NVarChar(MAX)")]
		public string OBJ_DescriptionLinked
		{
			get
			{
				return this._OBJ_DescriptionLinked;
			}
			set
			{
				if ((this._OBJ_DescriptionLinked != value))
				{
					this.OnOBJ_DescriptionLinkedChanging(value);
					this.SendPropertyChanging();
					this._OBJ_DescriptionLinked = value;
					this.SendPropertyChanged("OBJ_DescriptionLinked");
					this.OnOBJ_DescriptionLinkedChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_DescriptionMobile", DbType="NVarChar(MAX)")]
		public string OBJ_DescriptionMobile
		{
			get
			{
				return this._OBJ_DescriptionMobile;
			}
			set
			{
				if ((this._OBJ_DescriptionMobile != value))
				{
					this.OnOBJ_DescriptionMobileChanging(value);
					this.SendPropertyChanging();
					this._OBJ_DescriptionMobile = value;
					this.SendPropertyChanged("OBJ_DescriptionMobile");
					this.OnOBJ_DescriptionMobileChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_URLImageSmall", DbType="VarChar(200)")]
		public string OBJ_URLImageSmall
		{
			get
			{
				return this._OBJ_URLImageSmall;
			}
			set
			{
				if ((this._OBJ_URLImageSmall != value))
				{
					this.OnOBJ_URLImageSmallChanging(value);
					this.SendPropertyChanging();
					this._OBJ_URLImageSmall = value;
					this.SendPropertyChanged("OBJ_URLImageSmall");
					this.OnOBJ_URLImageSmallChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Copyright", DbType="Int")]
		public System.Nullable<int> OBJ_Copyright
		{
			get
			{
				return this._OBJ_Copyright;
			}
			set
			{
				if ((this._OBJ_Copyright != value))
				{
					this.OnOBJ_CopyrightChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Copyright = value;
					this.SendPropertyChanged("OBJ_Copyright");
					this.OnOBJ_CopyrightChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_TagList", DbType="NVarChar(MAX)")]
		public string OBJ_TagList
		{
			get
			{
				return this._OBJ_TagList;
			}
			set
			{
				if ((this._OBJ_TagList != value))
				{
					this.OnOBJ_TagListChanging(value);
					this.SendPropertyChanging();
					this._OBJ_TagList = value;
					this.SendPropertyChanged("OBJ_TagList");
					this.OnOBJ_TagListChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_StatisticUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OBJ_StatisticUpdate
		{
			get
			{
				return this._OBJ_StatisticUpdate;
			}
			set
			{
				if ((this._OBJ_StatisticUpdate != value))
				{
					this.OnOBJ_StatisticUpdateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_StatisticUpdate = value;
					this.SendPropertyChanged("OBJ_StatisticUpdate");
					this.OnOBJ_StatisticUpdateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_LangCode", DbType="VarChar(10)")]
		public string OBJ_LangCode
		{
			get
			{
				return this._OBJ_LangCode;
			}
			set
			{
				if ((this._OBJ_LangCode != value))
				{
					this.OnOBJ_LangCodeChanging(value);
					this.SendPropertyChanging();
					this._OBJ_LangCode = value;
					this.SendPropertyChanged("OBJ_LangCode");
					this.OnOBJ_LangCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime OBJ_InsertedDate
		{
			get
			{
				return this._OBJ_InsertedDate;
			}
			set
			{
				if ((this._OBJ_InsertedDate != value))
				{
					this.OnOBJ_InsertedDateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_InsertedDate = value;
					this.SendPropertyChanged("OBJ_InsertedDate");
					this.OnOBJ_InsertedDateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OBJ_UpdatedDate
		{
			get
			{
				return this._OBJ_UpdatedDate;
			}
			set
			{
				if ((this._OBJ_UpdatedDate != value))
				{
					this.OnOBJ_UpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_UpdatedDate = value;
					this.SendPropertyChanged("OBJ_UpdatedDate");
					this.OnOBJ_UpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_InsertedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OBJ_InsertedBy
		{
			get
			{
				return this._OBJ_InsertedBy;
			}
			set
			{
				if ((this._OBJ_InsertedBy != value))
				{
					this.OnOBJ_InsertedByChanging(value);
					this.SendPropertyChanging();
					this._OBJ_InsertedBy = value;
					this.SendPropertyChanged("OBJ_InsertedBy");
					this.OnOBJ_InsertedByChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OBJ_UpdatedBy
		{
			get
			{
				return this._OBJ_UpdatedBy;
			}
			set
			{
				if ((this._OBJ_UpdatedBy != value))
				{
					this.OnOBJ_UpdatedByChanging(value);
					this.SendPropertyChanging();
					this._OBJ_UpdatedBy = value;
					this.SendPropertyChanged("OBJ_UpdatedBy");
					this.OnOBJ_UpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_ViewCount", DbType="Int NOT NULL")]
		public int OBJ_ViewCount
		{
			get
			{
				return this._OBJ_ViewCount;
			}
			set
			{
				if ((this._OBJ_ViewCount != value))
				{
					this.OnOBJ_ViewCountChanging(value);
					this.SendPropertyChanging();
					this._OBJ_ViewCount = value;
					this.SendPropertyChanged("OBJ_ViewCount");
					this.OnOBJ_ViewCountChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_RatedCount", DbType="Int NOT NULL")]
		public int OBJ_RatedCount
		{
			get
			{
				return this._OBJ_RatedCount;
			}
			set
			{
				if ((this._OBJ_RatedCount != value))
				{
					this.OnOBJ_RatedCountChanging(value);
					this.SendPropertyChanging();
					this._OBJ_RatedCount = value;
					this.SendPropertyChanged("OBJ_RatedCount");
					this.OnOBJ_RatedCountChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_RatingAmount", DbType="Int NOT NULL")]
		public int OBJ_RatingAmount
		{
			get
			{
				return this._OBJ_RatingAmount;
			}
			set
			{
				if ((this._OBJ_RatingAmount != value))
				{
					this.OnOBJ_RatingAmountChanging(value);
					this.SendPropertyChanging();
					this._OBJ_RatingAmount = value;
					this.SendPropertyChanged("OBJ_RatingAmount");
					this.OnOBJ_RatingAmountChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_RatedAverage", DbType="Decimal(18,3) NOT NULL")]
		public decimal OBJ_RatedAverage
		{
			get
			{
				return this._OBJ_RatedAverage;
			}
			set
			{
				if ((this._OBJ_RatedAverage != value))
				{
					this.OnOBJ_RatedAverageChanging(value);
					this.SendPropertyChanging();
					this._OBJ_RatedAverage = value;
					this.SendPropertyChanged("OBJ_RatedAverage");
					this.OnOBJ_RatedAverageChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_RatedConsolidated", DbType="Decimal(18,5) NOT NULL")]
		public decimal OBJ_RatedConsolidated
		{
			get
			{
				return this._OBJ_RatedConsolidated;
			}
			set
			{
				if ((this._OBJ_RatedConsolidated != value))
				{
					this.OnOBJ_RatedConsolidatedChanging(value);
					this.SendPropertyChanging();
					this._OBJ_RatedConsolidated = value;
					this.SendPropertyChanged("OBJ_RatedConsolidated");
					this.OnOBJ_RatedConsolidatedChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_CommentCount", DbType="Int NOT NULL")]
		public int OBJ_CommentCount
		{
			get
			{
				return this._OBJ_CommentCount;
			}
			set
			{
				if ((this._OBJ_CommentCount != value))
				{
					this.OnOBJ_CommentCountChanging(value);
					this.SendPropertyChanging();
					this._OBJ_CommentCount = value;
					this.SendPropertyChanged("OBJ_CommentCount");
					this.OnOBJ_CommentCountChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_IncentivePoints", DbType="Int NOT NULL")]
		public int OBJ_IncentivePoints
		{
			get
			{
				return this._OBJ_IncentivePoints;
			}
			set
			{
				if ((this._OBJ_IncentivePoints != value))
				{
					this.OnOBJ_IncentivePointsChanging(value);
					this.SendPropertyChanging();
					this._OBJ_IncentivePoints = value;
					this.SendPropertyChanged("OBJ_IncentivePoints");
					this.OnOBJ_IncentivePointsChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_MemberCount", DbType="Int NOT NULL")]
		public int OBJ_MemberCount
		{
			get
			{
				return this._OBJ_MemberCount;
			}
			set
			{
				if ((this._OBJ_MemberCount != value))
				{
					this.OnOBJ_MemberCountChanging(value);
					this.SendPropertyChanging();
					this._OBJ_MemberCount = value;
					this.SendPropertyChanged("OBJ_MemberCount");
					this.OnOBJ_MemberCountChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Agility", DbType="Int NOT NULL")]
		public int OBJ_Agility
		{
			get
			{
				return this._OBJ_Agility;
			}
			set
			{
				if ((this._OBJ_Agility != value))
				{
					this.OnOBJ_AgilityChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Agility = value;
					this.SendPropertyChanged("OBJ_Agility");
					this.OnOBJ_AgilityChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_SpezialXml", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement OBJ_SpezialXml
		{
			get
			{
				return this._OBJ_SpezialXml;
			}
			set
			{
				if ((this._OBJ_SpezialXml != value))
				{
					this.OnOBJ_SpezialXmlChanging(value);
					this.SendPropertyChanging();
					this._OBJ_SpezialXml = value;
					this.SendPropertyChanged("OBJ_SpezialXml");
					this.OnOBJ_SpezialXmlChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_OriginalObjID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OBJ_OriginalObjID
		{
			get
			{
				return this._OBJ_OriginalObjID;
			}
			set
			{
				if ((this._OBJ_OriginalObjID != value))
				{
					this.OnOBJ_OriginalObjIDChanging(value);
					this.SendPropertyChanging();
					this._OBJ_OriginalObjID = value;
					this.SendPropertyChanged("OBJ_OriginalObjID");
					this.OnOBJ_OriginalObjIDChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Country_ISO", DbType="NVarChar(5)")]
		public string OBJ_Country_ISO
		{
			get
			{
				return this._OBJ_Country_ISO;
			}
			set
			{
				if ((this._OBJ_Country_ISO != value))
				{
					this.OnOBJ_Country_ISOChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Country_ISO = value;
					this.SendPropertyChanged("OBJ_Country_ISO");
					this.OnOBJ_Country_ISOChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Region", DbType="NVarChar(25)")]
		public string OBJ_Region
		{
			get
			{
				return this._OBJ_Region;
			}
			set
			{
				if ((this._OBJ_Region != value))
				{
					this.OnOBJ_RegionChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Region = value;
					this.SendPropertyChanged("OBJ_Region");
					this.OnOBJ_RegionChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Street", DbType="NVarChar(128)")]
		public string OBJ_Street
		{
			get
			{
				return this._OBJ_Street;
			}
			set
			{
				if ((this._OBJ_Street != value))
				{
					this.OnOBJ_StreetChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Street = value;
					this.SendPropertyChanged("OBJ_Street");
					this.OnOBJ_StreetChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Zip", DbType="NVarChar(8)")]
		public string OBJ_Zip
		{
			get
			{
				return this._OBJ_Zip;
			}
			set
			{
				if ((this._OBJ_Zip != value))
				{
					this.OnOBJ_ZipChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Zip = value;
					this.SendPropertyChanged("OBJ_Zip");
					this.OnOBJ_ZipChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_City", DbType="NVarChar(50)")]
		public string OBJ_City
		{
			get
			{
				return this._OBJ_City;
			}
			set
			{
				if ((this._OBJ_City != value))
				{
					this.OnOBJ_CityChanging(value);
					this.SendPropertyChanging();
					this._OBJ_City = value;
					this.SendPropertyChanged("OBJ_City");
					this.OnOBJ_CityChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Geo_Lat", DbType="Float")]
		public System.Nullable<double> OBJ_Geo_Lat
		{
			get
			{
				return this._OBJ_Geo_Lat;
			}
			set
			{
				if ((this._OBJ_Geo_Lat != value))
				{
					this.OnOBJ_Geo_LatChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Geo_Lat = value;
					this.SendPropertyChanged("OBJ_Geo_Lat");
					this.OnOBJ_Geo_LatChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_Geo_Long", DbType="Float")]
		public System.Nullable<double> OBJ_Geo_Long
		{
			get
			{
				return this._OBJ_Geo_Long;
			}
			set
			{
				if ((this._OBJ_Geo_Long != value))
				{
					this.OnOBJ_Geo_LongChanging(value);
					this.SendPropertyChanging();
					this._OBJ_Geo_Long = value;
					this.SendPropertyChanged("OBJ_Geo_Long");
					this.OnOBJ_Geo_LongChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_GroupID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OBJ_GroupID
		{
			get
			{
				return this._OBJ_GroupID;
			}
			set
			{
				if ((this._OBJ_GroupID != value))
				{
					this.OnOBJ_GroupIDChanging(value);
					this.SendPropertyChanging();
					this._OBJ_GroupID = value;
					this.SendPropertyChanged("OBJ_GroupID");
					this.OnOBJ_GroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OBJ_StartDate
		{
			get
			{
				return this._OBJ_StartDate;
			}
			set
			{
				if ((this._OBJ_StartDate != value))
				{
					this.OnOBJ_StartDateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_StartDate = value;
					this.SendPropertyChanged("OBJ_StartDate");
					this.OnOBJ_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OBJ_EndDate
		{
			get
			{
				return this._OBJ_EndDate;
			}
			set
			{
				if ((this._OBJ_EndDate != value))
				{
					this.OnOBJ_EndDateChanging(value);
					this.SendPropertyChanging();
					this._OBJ_EndDate = value;
					this.SendPropertyChanged("OBJ_EndDate");
					this.OnOBJ_EndDateChanged();
				}
			}
		}
		
		[Column(Storage="_OBJ_URL_XSLT", DbType="NVarChar(256)")]
		public string OBJ_URL_XSLT
		{
			get
			{
				return this._OBJ_URL_XSLT;
			}
			set
			{
				if ((this._OBJ_URL_XSLT != value))
				{
					this.OnOBJ_URL_XSLTChanging(value);
					this.SendPropertyChanging();
					this._OBJ_URL_XSLT = value;
					this.SendPropertyChanged("OBJ_URL_XSLT");
					this.OnOBJ_URL_XSLTChanged();
				}
			}
		}
		
		[Association(Name="hitbl_DataObject_OBJ_hitbl_Partners_PAR", Storage="_hitbl_Partners_PARs", ThisKey="OBJ_ID", OtherKey="CTY_ID")]
		public EntitySet<hitbl_Partners_PAR> hitbl_Partners_PARs
		{
			get
			{
				return this._hitbl_Partners_PARs;
			}
			set
			{
				this._hitbl_Partners_PARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hitbl_Partners_PARs(hitbl_Partners_PAR entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_DataObject_OBJ = this;
		}
		
		private void detach_hitbl_Partners_PARs(hitbl_Partners_PAR entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_DataObject_OBJ = null;
		}
	}
	
	[Table(Name="dbo.hitbl_Main_MAN")]
	public partial class hitbl_Main_MAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAN_ID;
		
		private System.Nullable<int> _MAN_Level;
		
		private System.Nullable<int> _MAN_MAN_ID;
		
		private string _MAN_Title;
		
		private System.Nullable<int> _MAN_Status;
		
		private int _MAN_Order;
		
		private System.Guid _TGW_ID;
		
		private EntitySet<hitbl_Main_MAN> _hitbl_Main_MANs;
		
		private EntityRef<hitbl_Main_MAN> _hitbl_Main_MAN1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAN_IDChanging(int value);
    partial void OnMAN_IDChanged();
    partial void OnMAN_LevelChanging(System.Nullable<int> value);
    partial void OnMAN_LevelChanged();
    partial void OnMAN_MAN_IDChanging(System.Nullable<int> value);
    partial void OnMAN_MAN_IDChanged();
    partial void OnMAN_TitleChanging(string value);
    partial void OnMAN_TitleChanged();
    partial void OnMAN_StatusChanging(System.Nullable<int> value);
    partial void OnMAN_StatusChanged();
    partial void OnMAN_OrderChanging(int value);
    partial void OnMAN_OrderChanged();
    partial void OnTGW_IDChanging(System.Guid value);
    partial void OnTGW_IDChanged();
    #endregion
		
		public hitbl_Main_MAN()
		{
			this._hitbl_Main_MANs = new EntitySet<hitbl_Main_MAN>(new Action<hitbl_Main_MAN>(this.attach_hitbl_Main_MANs), new Action<hitbl_Main_MAN>(this.detach_hitbl_Main_MANs));
			this._hitbl_Main_MAN1 = default(EntityRef<hitbl_Main_MAN>);
			OnCreated();
		}
		
		[Column(Storage="_MAN_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAN_ID
		{
			get
			{
				return this._MAN_ID;
			}
			set
			{
				if ((this._MAN_ID != value))
				{
					this.OnMAN_IDChanging(value);
					this.SendPropertyChanging();
					this._MAN_ID = value;
					this.SendPropertyChanged("MAN_ID");
					this.OnMAN_IDChanged();
				}
			}
		}
		
		[Column(Storage="_MAN_Level", DbType="Int")]
		public System.Nullable<int> MAN_Level
		{
			get
			{
				return this._MAN_Level;
			}
			set
			{
				if ((this._MAN_Level != value))
				{
					this.OnMAN_LevelChanging(value);
					this.SendPropertyChanging();
					this._MAN_Level = value;
					this.SendPropertyChanged("MAN_Level");
					this.OnMAN_LevelChanged();
				}
			}
		}
		
		[Column(Storage="_MAN_MAN_ID", DbType="Int")]
		public System.Nullable<int> MAN_MAN_ID
		{
			get
			{
				return this._MAN_MAN_ID;
			}
			set
			{
				if ((this._MAN_MAN_ID != value))
				{
					if (this._hitbl_Main_MAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAN_MAN_IDChanging(value);
					this.SendPropertyChanging();
					this._MAN_MAN_ID = value;
					this.SendPropertyChanged("MAN_MAN_ID");
					this.OnMAN_MAN_IDChanged();
				}
			}
		}
		
		[Column(Storage="_MAN_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MAN_Title
		{
			get
			{
				return this._MAN_Title;
			}
			set
			{
				if ((this._MAN_Title != value))
				{
					this.OnMAN_TitleChanging(value);
					this.SendPropertyChanging();
					this._MAN_Title = value;
					this.SendPropertyChanged("MAN_Title");
					this.OnMAN_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_MAN_Status", DbType="Int")]
		public System.Nullable<int> MAN_Status
		{
			get
			{
				return this._MAN_Status;
			}
			set
			{
				if ((this._MAN_Status != value))
				{
					this.OnMAN_StatusChanging(value);
					this.SendPropertyChanging();
					this._MAN_Status = value;
					this.SendPropertyChanged("MAN_Status");
					this.OnMAN_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_MAN_Order", DbType="Int NOT NULL")]
		public int MAN_Order
		{
			get
			{
				return this._MAN_Order;
			}
			set
			{
				if ((this._MAN_Order != value))
				{
					this.OnMAN_OrderChanging(value);
					this.SendPropertyChanging();
					this._MAN_Order = value;
					this.SendPropertyChanged("MAN_Order");
					this.OnMAN_OrderChanged();
				}
			}
		}
		
		[Column(Storage="_TGW_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TGW_ID
		{
			get
			{
				return this._TGW_ID;
			}
			set
			{
				if ((this._TGW_ID != value))
				{
					this.OnTGW_IDChanging(value);
					this.SendPropertyChanging();
					this._TGW_ID = value;
					this.SendPropertyChanged("TGW_ID");
					this.OnTGW_IDChanged();
				}
			}
		}
		
		[Association(Name="hitbl_Main_MAN_hitbl_Main_MAN", Storage="_hitbl_Main_MANs", ThisKey="MAN_ID", OtherKey="MAN_MAN_ID")]
		public EntitySet<hitbl_Main_MAN> hitbl_Main_MANs
		{
			get
			{
				return this._hitbl_Main_MANs;
			}
			set
			{
				this._hitbl_Main_MANs.Assign(value);
			}
		}
		
		[Association(Name="hitbl_Main_MAN_hitbl_Main_MAN", Storage="_hitbl_Main_MAN1", ThisKey="MAN_MAN_ID", OtherKey="MAN_ID", IsForeignKey=true)]
		public hitbl_Main_MAN hitbl_Main_MAN1
		{
			get
			{
				return this._hitbl_Main_MAN1.Entity;
			}
			set
			{
				hitbl_Main_MAN previousValue = this._hitbl_Main_MAN1.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_Main_MAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_Main_MAN1.Entity = null;
						previousValue.hitbl_Main_MANs.Remove(this);
					}
					this._hitbl_Main_MAN1.Entity = value;
					if ((value != null))
					{
						value.hitbl_Main_MANs.Add(this);
						this._MAN_MAN_ID = value.MAN_ID;
					}
					else
					{
						this._MAN_MAN_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("hitbl_Main_MAN1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hitbl_Main_MANs(hitbl_Main_MAN entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Main_MAN1 = this;
		}
		
		private void detach_hitbl_Main_MANs(hitbl_Main_MAN entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Main_MAN1 = null;
		}
	}
	
	[Table(Name="dbo.hitbl_WidgetInstanceText_WIT")]
	public partial class hitbl_WidgetInstanceText_WIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _INS_ID;
		
		private string _WIT_LangCode;
		
		private string _WIT_Title;
		
		private EntityRef<hitbl_WidgetInstance_IN> _hitbl_WidgetInstance_IN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINS_IDChanging(System.Guid value);
    partial void OnINS_IDChanged();
    partial void OnWIT_LangCodeChanging(string value);
    partial void OnWIT_LangCodeChanged();
    partial void OnWIT_TitleChanging(string value);
    partial void OnWIT_TitleChanged();
    #endregion
		
		public hitbl_WidgetInstanceText_WIT()
		{
			this._hitbl_WidgetInstance_IN = default(EntityRef<hitbl_WidgetInstance_IN>);
			OnCreated();
		}
		
		[Column(Storage="_INS_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid INS_ID
		{
			get
			{
				return this._INS_ID;
			}
			set
			{
				if ((this._INS_ID != value))
				{
					if (this._hitbl_WidgetInstance_IN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINS_IDChanging(value);
					this.SendPropertyChanging();
					this._INS_ID = value;
					this.SendPropertyChanged("INS_ID");
					this.OnINS_IDChanged();
				}
			}
		}
		
		[Column(Storage="_WIT_LangCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WIT_LangCode
		{
			get
			{
				return this._WIT_LangCode;
			}
			set
			{
				if ((this._WIT_LangCode != value))
				{
					this.OnWIT_LangCodeChanging(value);
					this.SendPropertyChanging();
					this._WIT_LangCode = value;
					this.SendPropertyChanged("WIT_LangCode");
					this.OnWIT_LangCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WIT_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WIT_Title
		{
			get
			{
				return this._WIT_Title;
			}
			set
			{
				if ((this._WIT_Title != value))
				{
					this.OnWIT_TitleChanging(value);
					this.SendPropertyChanging();
					this._WIT_Title = value;
					this.SendPropertyChanged("WIT_Title");
					this.OnWIT_TitleChanged();
				}
			}
		}
		
		[Association(Name="hitbl_WidgetInstance_IN_hitbl_WidgetInstanceText_WIT", Storage="_hitbl_WidgetInstance_IN", ThisKey="INS_ID", OtherKey="INS_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public hitbl_WidgetInstance_IN hitbl_WidgetInstance_IN
		{
			get
			{
				return this._hitbl_WidgetInstance_IN.Entity;
			}
			set
			{
				hitbl_WidgetInstance_IN previousValue = this._hitbl_WidgetInstance_IN.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_WidgetInstance_IN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_WidgetInstance_IN.Entity = null;
						previousValue.hitbl_WidgetInstanceText_WITs.Remove(this);
					}
					this._hitbl_WidgetInstance_IN.Entity = value;
					if ((value != null))
					{
						value.hitbl_WidgetInstanceText_WITs.Add(this);
						this._INS_ID = value.INS_ID;
					}
					else
					{
						this._INS_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_WidgetInstance_IN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_Community_CTY")]
	public partial class hitbl_Community_CTY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CTY_ID;
		
		private string _CTY_VirtualUrl;
		
		private System.Nullable<System.DateTime> _CTY_StartDate;
		
		private System.Nullable<System.DateTime> _CTY_EndDate;
		
		private System.Nullable<int> _CTY_Status;
		
		private System.Nullable<int> _CTY_Priority;
		
		private System.Nullable<System.DateTime> _CTY_LastBatchRunning;
		
		private System.DateTime _CTY_InsertedDate;
		
		private System.Nullable<System.DateTime> _CTY_UpdatedDate;
		
		private string _CTY_Layout;
		
		private string _CTY_Theme;
		
		private System.Nullable<System.Guid> _USR_ID_Inserted;
		
		private System.Nullable<System.Guid> _USR_ID_Updated;
		
		private string _CTY_BodyStyle;
		
		private string _CTY_HeaderStyle;
		
		private string _CTY_FooterStyle;
		
		private bool _CTY_IsProfile;
		
		private EntitySet<hirel_Community_User_CUR> _hirel_Community_User_CURs;
		
		private EntitySet<hitbl_CommunityText_CTT> _hitbl_CommunityText_CTTs;
		
		private EntitySet<hitbl_Page_PAG> _hitbl_Page_PAGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTY_IDChanging(System.Guid value);
    partial void OnCTY_IDChanged();
    partial void OnCTY_VirtualUrlChanging(string value);
    partial void OnCTY_VirtualUrlChanged();
    partial void OnCTY_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCTY_StartDateChanged();
    partial void OnCTY_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCTY_EndDateChanged();
    partial void OnCTY_StatusChanging(System.Nullable<int> value);
    partial void OnCTY_StatusChanged();
    partial void OnCTY_PriorityChanging(System.Nullable<int> value);
    partial void OnCTY_PriorityChanged();
    partial void OnCTY_LastBatchRunningChanging(System.Nullable<System.DateTime> value);
    partial void OnCTY_LastBatchRunningChanged();
    partial void OnCTY_InsertedDateChanging(System.DateTime value);
    partial void OnCTY_InsertedDateChanged();
    partial void OnCTY_UpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCTY_UpdatedDateChanged();
    partial void OnCTY_LayoutChanging(string value);
    partial void OnCTY_LayoutChanged();
    partial void OnCTY_ThemeChanging(string value);
    partial void OnCTY_ThemeChanged();
    partial void OnUSR_ID_InsertedChanging(System.Nullable<System.Guid> value);
    partial void OnUSR_ID_InsertedChanged();
    partial void OnUSR_ID_UpdatedChanging(System.Nullable<System.Guid> value);
    partial void OnUSR_ID_UpdatedChanged();
    partial void OnCTY_BodyStyleChanging(string value);
    partial void OnCTY_BodyStyleChanged();
    partial void OnCTY_HeaderStyleChanging(string value);
    partial void OnCTY_HeaderStyleChanged();
    partial void OnCTY_FooterStyleChanging(string value);
    partial void OnCTY_FooterStyleChanged();
    partial void OnCTY_IsProfileChanging(bool value);
    partial void OnCTY_IsProfileChanged();
    #endregion
		
		public hitbl_Community_CTY()
		{
			this._hirel_Community_User_CURs = new EntitySet<hirel_Community_User_CUR>(new Action<hirel_Community_User_CUR>(this.attach_hirel_Community_User_CURs), new Action<hirel_Community_User_CUR>(this.detach_hirel_Community_User_CURs));
			this._hitbl_CommunityText_CTTs = new EntitySet<hitbl_CommunityText_CTT>(new Action<hitbl_CommunityText_CTT>(this.attach_hitbl_CommunityText_CTTs), new Action<hitbl_CommunityText_CTT>(this.detach_hitbl_CommunityText_CTTs));
			this._hitbl_Page_PAGs = new EntitySet<hitbl_Page_PAG>(new Action<hitbl_Page_PAG>(this.attach_hitbl_Page_PAGs), new Action<hitbl_Page_PAG>(this.detach_hitbl_Page_PAGs));
			OnCreated();
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_VirtualUrl", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CTY_VirtualUrl
		{
			get
			{
				return this._CTY_VirtualUrl;
			}
			set
			{
				if ((this._CTY_VirtualUrl != value))
				{
					this.OnCTY_VirtualUrlChanging(value);
					this.SendPropertyChanging();
					this._CTY_VirtualUrl = value;
					this.SendPropertyChanged("CTY_VirtualUrl");
					this.OnCTY_VirtualUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CTY_StartDate
		{
			get
			{
				return this._CTY_StartDate;
			}
			set
			{
				if ((this._CTY_StartDate != value))
				{
					this.OnCTY_StartDateChanging(value);
					this.SendPropertyChanging();
					this._CTY_StartDate = value;
					this.SendPropertyChanged("CTY_StartDate");
					this.OnCTY_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CTY_EndDate
		{
			get
			{
				return this._CTY_EndDate;
			}
			set
			{
				if ((this._CTY_EndDate != value))
				{
					this.OnCTY_EndDateChanging(value);
					this.SendPropertyChanging();
					this._CTY_EndDate = value;
					this.SendPropertyChanged("CTY_EndDate");
					this.OnCTY_EndDateChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_Status", DbType="Int")]
		public System.Nullable<int> CTY_Status
		{
			get
			{
				return this._CTY_Status;
			}
			set
			{
				if ((this._CTY_Status != value))
				{
					this.OnCTY_StatusChanging(value);
					this.SendPropertyChanging();
					this._CTY_Status = value;
					this.SendPropertyChanged("CTY_Status");
					this.OnCTY_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_Priority", DbType="Int")]
		public System.Nullable<int> CTY_Priority
		{
			get
			{
				return this._CTY_Priority;
			}
			set
			{
				if ((this._CTY_Priority != value))
				{
					this.OnCTY_PriorityChanging(value);
					this.SendPropertyChanging();
					this._CTY_Priority = value;
					this.SendPropertyChanged("CTY_Priority");
					this.OnCTY_PriorityChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_LastBatchRunning", DbType="DateTime")]
		public System.Nullable<System.DateTime> CTY_LastBatchRunning
		{
			get
			{
				return this._CTY_LastBatchRunning;
			}
			set
			{
				if ((this._CTY_LastBatchRunning != value))
				{
					this.OnCTY_LastBatchRunningChanging(value);
					this.SendPropertyChanging();
					this._CTY_LastBatchRunning = value;
					this.SendPropertyChanged("CTY_LastBatchRunning");
					this.OnCTY_LastBatchRunningChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CTY_InsertedDate
		{
			get
			{
				return this._CTY_InsertedDate;
			}
			set
			{
				if ((this._CTY_InsertedDate != value))
				{
					this.OnCTY_InsertedDateChanging(value);
					this.SendPropertyChanging();
					this._CTY_InsertedDate = value;
					this.SendPropertyChanged("CTY_InsertedDate");
					this.OnCTY_InsertedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CTY_UpdatedDate
		{
			get
			{
				return this._CTY_UpdatedDate;
			}
			set
			{
				if ((this._CTY_UpdatedDate != value))
				{
					this.OnCTY_UpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CTY_UpdatedDate = value;
					this.SendPropertyChanged("CTY_UpdatedDate");
					this.OnCTY_UpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_Layout", DbType="NVarChar(50)")]
		public string CTY_Layout
		{
			get
			{
				return this._CTY_Layout;
			}
			set
			{
				if ((this._CTY_Layout != value))
				{
					this.OnCTY_LayoutChanging(value);
					this.SendPropertyChanging();
					this._CTY_Layout = value;
					this.SendPropertyChanged("CTY_Layout");
					this.OnCTY_LayoutChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_Theme", DbType="NVarChar(50)")]
		public string CTY_Theme
		{
			get
			{
				return this._CTY_Theme;
			}
			set
			{
				if ((this._CTY_Theme != value))
				{
					this.OnCTY_ThemeChanging(value);
					this.SendPropertyChanging();
					this._CTY_Theme = value;
					this.SendPropertyChanged("CTY_Theme");
					this.OnCTY_ThemeChanged();
				}
			}
		}
		
		[Column(Storage="_USR_ID_Inserted", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USR_ID_Inserted
		{
			get
			{
				return this._USR_ID_Inserted;
			}
			set
			{
				if ((this._USR_ID_Inserted != value))
				{
					this.OnUSR_ID_InsertedChanging(value);
					this.SendPropertyChanging();
					this._USR_ID_Inserted = value;
					this.SendPropertyChanged("USR_ID_Inserted");
					this.OnUSR_ID_InsertedChanged();
				}
			}
		}
		
		[Column(Storage="_USR_ID_Updated", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USR_ID_Updated
		{
			get
			{
				return this._USR_ID_Updated;
			}
			set
			{
				if ((this._USR_ID_Updated != value))
				{
					this.OnUSR_ID_UpdatedChanging(value);
					this.SendPropertyChanging();
					this._USR_ID_Updated = value;
					this.SendPropertyChanged("USR_ID_Updated");
					this.OnUSR_ID_UpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_BodyStyle", DbType="NVarChar(512)")]
		public string CTY_BodyStyle
		{
			get
			{
				return this._CTY_BodyStyle;
			}
			set
			{
				if ((this._CTY_BodyStyle != value))
				{
					this.OnCTY_BodyStyleChanging(value);
					this.SendPropertyChanging();
					this._CTY_BodyStyle = value;
					this.SendPropertyChanged("CTY_BodyStyle");
					this.OnCTY_BodyStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_HeaderStyle", DbType="NVarChar(512)")]
		public string CTY_HeaderStyle
		{
			get
			{
				return this._CTY_HeaderStyle;
			}
			set
			{
				if ((this._CTY_HeaderStyle != value))
				{
					this.OnCTY_HeaderStyleChanging(value);
					this.SendPropertyChanging();
					this._CTY_HeaderStyle = value;
					this.SendPropertyChanged("CTY_HeaderStyle");
					this.OnCTY_HeaderStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_FooterStyle", DbType="NVarChar(512)")]
		public string CTY_FooterStyle
		{
			get
			{
				return this._CTY_FooterStyle;
			}
			set
			{
				if ((this._CTY_FooterStyle != value))
				{
					this.OnCTY_FooterStyleChanging(value);
					this.SendPropertyChanging();
					this._CTY_FooterStyle = value;
					this.SendPropertyChanged("CTY_FooterStyle");
					this.OnCTY_FooterStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_IsProfile", DbType="Bit NOT NULL")]
		public bool CTY_IsProfile
		{
			get
			{
				return this._CTY_IsProfile;
			}
			set
			{
				if ((this._CTY_IsProfile != value))
				{
					this.OnCTY_IsProfileChanging(value);
					this.SendPropertyChanging();
					this._CTY_IsProfile = value;
					this.SendPropertyChanged("CTY_IsProfile");
					this.OnCTY_IsProfileChanged();
				}
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hirel_Community_User_CUR", Storage="_hirel_Community_User_CURs", ThisKey="CTY_ID", OtherKey="CTY_ID")]
		public EntitySet<hirel_Community_User_CUR> hirel_Community_User_CURs
		{
			get
			{
				return this._hirel_Community_User_CURs;
			}
			set
			{
				this._hirel_Community_User_CURs.Assign(value);
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hitbl_CommunityText_CTT", Storage="_hitbl_CommunityText_CTTs", ThisKey="CTY_ID", OtherKey="CTY_ID")]
		public EntitySet<hitbl_CommunityText_CTT> hitbl_CommunityText_CTTs
		{
			get
			{
				return this._hitbl_CommunityText_CTTs;
			}
			set
			{
				this._hitbl_CommunityText_CTTs.Assign(value);
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hitbl_Page_PAG", Storage="_hitbl_Page_PAGs", ThisKey="CTY_ID", OtherKey="CTY_ID")]
		public EntitySet<hitbl_Page_PAG> hitbl_Page_PAGs
		{
			get
			{
				return this._hitbl_Page_PAGs;
			}
			set
			{
				this._hitbl_Page_PAGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hirel_Community_User_CURs(hirel_Community_User_CUR entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = this;
		}
		
		private void detach_hirel_Community_User_CURs(hirel_Community_User_CUR entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = null;
		}
		
		private void attach_hitbl_CommunityText_CTTs(hitbl_CommunityText_CTT entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = this;
		}
		
		private void detach_hitbl_CommunityText_CTTs(hitbl_CommunityText_CTT entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = null;
		}
		
		private void attach_hitbl_Page_PAGs(hitbl_Page_PAG entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = this;
		}
		
		private void detach_hitbl_Page_PAGs(hitbl_Page_PAG entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Community_CTY = null;
		}
	}
	
	[Table(Name="dbo.hitbl_CommunityText_CTT")]
	public partial class hitbl_CommunityText_CTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CTY_ID;
		
		private string _CTT_LangCode;
		
		private string _CTT_Title;
		
		private string _CTT_Description;
		
		private EntityRef<hitbl_Community_CTY> _hitbl_Community_CTY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTY_IDChanging(System.Guid value);
    partial void OnCTY_IDChanged();
    partial void OnCTT_LangCodeChanging(string value);
    partial void OnCTT_LangCodeChanged();
    partial void OnCTT_TitleChanging(string value);
    partial void OnCTT_TitleChanged();
    partial void OnCTT_DescriptionChanging(string value);
    partial void OnCTT_DescriptionChanged();
    #endregion
		
		public hitbl_CommunityText_CTT()
		{
			this._hitbl_Community_CTY = default(EntityRef<hitbl_Community_CTY>);
			OnCreated();
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					if (this._hitbl_Community_CTY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CTT_LangCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CTT_LangCode
		{
			get
			{
				return this._CTT_LangCode;
			}
			set
			{
				if ((this._CTT_LangCode != value))
				{
					this.OnCTT_LangCodeChanging(value);
					this.SendPropertyChanging();
					this._CTT_LangCode = value;
					this.SendPropertyChanged("CTT_LangCode");
					this.OnCTT_LangCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CTT_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CTT_Title
		{
			get
			{
				return this._CTT_Title;
			}
			set
			{
				if ((this._CTT_Title != value))
				{
					this.OnCTT_TitleChanging(value);
					this.SendPropertyChanging();
					this._CTT_Title = value;
					this.SendPropertyChanged("CTT_Title");
					this.OnCTT_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_CTT_Description", DbType="NVarChar(2000)")]
		public string CTT_Description
		{
			get
			{
				return this._CTT_Description;
			}
			set
			{
				if ((this._CTT_Description != value))
				{
					this.OnCTT_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._CTT_Description = value;
					this.SendPropertyChanged("CTT_Description");
					this.OnCTT_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hitbl_CommunityText_CTT", Storage="_hitbl_Community_CTY", ThisKey="CTY_ID", OtherKey="CTY_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public hitbl_Community_CTY hitbl_Community_CTY
		{
			get
			{
				return this._hitbl_Community_CTY.Entity;
			}
			set
			{
				hitbl_Community_CTY previousValue = this._hitbl_Community_CTY.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_Community_CTY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_Community_CTY.Entity = null;
						previousValue.hitbl_CommunityText_CTTs.Remove(this);
					}
					this._hitbl_Community_CTY.Entity = value;
					if ((value != null))
					{
						value.hitbl_CommunityText_CTTs.Add(this);
						this._CTY_ID = value.CTY_ID;
					}
					else
					{
						this._CTY_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_Community_CTY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_FilterBadWords_FBW")]
	public partial class hitbl_FilterBadWords_FBW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FBW_ID;
		
		private string _FBW_Word;
		
		private bool _FBW_IsExactMatch;
		
		private string _FBW_Action;
		
		private string _FBW_Parameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFBW_IDChanging(System.Guid value);
    partial void OnFBW_IDChanged();
    partial void OnFBW_WordChanging(string value);
    partial void OnFBW_WordChanged();
    partial void OnFBW_IsExactMatchChanging(bool value);
    partial void OnFBW_IsExactMatchChanged();
    partial void OnFBW_ActionChanging(string value);
    partial void OnFBW_ActionChanged();
    partial void OnFBW_ParameterChanging(string value);
    partial void OnFBW_ParameterChanged();
    #endregion
		
		public hitbl_FilterBadWords_FBW()
		{
			OnCreated();
		}
		
		[Column(Storage="_FBW_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FBW_ID
		{
			get
			{
				return this._FBW_ID;
			}
			set
			{
				if ((this._FBW_ID != value))
				{
					this.OnFBW_IDChanging(value);
					this.SendPropertyChanging();
					this._FBW_ID = value;
					this.SendPropertyChanged("FBW_ID");
					this.OnFBW_IDChanged();
				}
			}
		}
		
		[Column(Storage="_FBW_Word", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FBW_Word
		{
			get
			{
				return this._FBW_Word;
			}
			set
			{
				if ((this._FBW_Word != value))
				{
					this.OnFBW_WordChanging(value);
					this.SendPropertyChanging();
					this._FBW_Word = value;
					this.SendPropertyChanged("FBW_Word");
					this.OnFBW_WordChanged();
				}
			}
		}
		
		[Column(Storage="_FBW_IsExactMatch", DbType="Bit NOT NULL")]
		public bool FBW_IsExactMatch
		{
			get
			{
				return this._FBW_IsExactMatch;
			}
			set
			{
				if ((this._FBW_IsExactMatch != value))
				{
					this.OnFBW_IsExactMatchChanging(value);
					this.SendPropertyChanging();
					this._FBW_IsExactMatch = value;
					this.SendPropertyChanged("FBW_IsExactMatch");
					this.OnFBW_IsExactMatchChanged();
				}
			}
		}
		
		[Column(Storage="_FBW_Action", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FBW_Action
		{
			get
			{
				return this._FBW_Action;
			}
			set
			{
				if ((this._FBW_Action != value))
				{
					this.OnFBW_ActionChanging(value);
					this.SendPropertyChanging();
					this._FBW_Action = value;
					this.SendPropertyChanged("FBW_Action");
					this.OnFBW_ActionChanged();
				}
			}
		}
		
		[Column(Storage="_FBW_Parameter", DbType="NVarChar(50)")]
		public string FBW_Parameter
		{
			get
			{
				return this._FBW_Parameter;
			}
			set
			{
				if ((this._FBW_Parameter != value))
				{
					this.OnFBW_ParameterChanging(value);
					this.SendPropertyChanging();
					this._FBW_Parameter = value;
					this.SendPropertyChanged("FBW_Parameter");
					this.OnFBW_ParameterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_Settings_SET")]
	public partial class hitbl_Settings_SET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SET_Key;
		
		private string _SET_Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSET_KeyChanging(string value);
    partial void OnSET_KeyChanged();
    partial void OnSET_ValueChanging(string value);
    partial void OnSET_ValueChanged();
    #endregion
		
		public hitbl_Settings_SET()
		{
			OnCreated();
		}
		
		[Column(Storage="_SET_Key", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SET_Key
		{
			get
			{
				return this._SET_Key;
			}
			set
			{
				if ((this._SET_Key != value))
				{
					this.OnSET_KeyChanging(value);
					this.SendPropertyChanging();
					this._SET_Key = value;
					this.SendPropertyChanged("SET_Key");
					this.OnSET_KeyChanged();
				}
			}
		}
		
		[Column(Storage="_SET_Value", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SET_Value
		{
			get
			{
				return this._SET_Value;
			}
			set
			{
				if ((this._SET_Value != value))
				{
					this.OnSET_ValueChanging(value);
					this.SendPropertyChanging();
					this._SET_Value = value;
					this.SendPropertyChanged("SET_Value");
					this.OnSET_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_Page_PAG")]
	public partial class hitbl_Page_PAG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAG_ID;
		
		private string _PAG_Title;
		
		private System.DateTime _PAG_CreatedDate;
		
		private System.DateTime _PAG_LastUpdate;
		
		private System.Guid _CTY_ID;
		
		private int _PAG_OrderNr;
		
		private EntitySet<hitbl_WidgetInstance_IN> _hitbl_WidgetInstance_INs;
		
		private EntityRef<hitbl_Community_CTY> _hitbl_Community_CTY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAG_IDChanging(System.Guid value);
    partial void OnPAG_IDChanged();
    partial void OnPAG_TitleChanging(string value);
    partial void OnPAG_TitleChanged();
    partial void OnPAG_CreatedDateChanging(System.DateTime value);
    partial void OnPAG_CreatedDateChanged();
    partial void OnPAG_LastUpdateChanging(System.DateTime value);
    partial void OnPAG_LastUpdateChanged();
    partial void OnCTY_IDChanging(System.Guid value);
    partial void OnCTY_IDChanged();
    partial void OnPAG_OrderNrChanging(int value);
    partial void OnPAG_OrderNrChanged();
    #endregion
		
		public hitbl_Page_PAG()
		{
			this._hitbl_WidgetInstance_INs = new EntitySet<hitbl_WidgetInstance_IN>(new Action<hitbl_WidgetInstance_IN>(this.attach_hitbl_WidgetInstance_INs), new Action<hitbl_WidgetInstance_IN>(this.detach_hitbl_WidgetInstance_INs));
			this._hitbl_Community_CTY = default(EntityRef<hitbl_Community_CTY>);
			OnCreated();
		}
		
		[Column(Storage="_PAG_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAG_ID
		{
			get
			{
				return this._PAG_ID;
			}
			set
			{
				if ((this._PAG_ID != value))
				{
					this.OnPAG_IDChanging(value);
					this.SendPropertyChanging();
					this._PAG_ID = value;
					this.SendPropertyChanged("PAG_ID");
					this.OnPAG_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAG_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PAG_Title
		{
			get
			{
				return this._PAG_Title;
			}
			set
			{
				if ((this._PAG_Title != value))
				{
					this.OnPAG_TitleChanging(value);
					this.SendPropertyChanging();
					this._PAG_Title = value;
					this.SendPropertyChanged("PAG_Title");
					this.OnPAG_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_PAG_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime PAG_CreatedDate
		{
			get
			{
				return this._PAG_CreatedDate;
			}
			set
			{
				if ((this._PAG_CreatedDate != value))
				{
					this.OnPAG_CreatedDateChanging(value);
					this.SendPropertyChanging();
					this._PAG_CreatedDate = value;
					this.SendPropertyChanged("PAG_CreatedDate");
					this.OnPAG_CreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PAG_LastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime PAG_LastUpdate
		{
			get
			{
				return this._PAG_LastUpdate;
			}
			set
			{
				if ((this._PAG_LastUpdate != value))
				{
					this.OnPAG_LastUpdateChanging(value);
					this.SendPropertyChanging();
					this._PAG_LastUpdate = value;
					this.SendPropertyChanged("PAG_LastUpdate");
					this.OnPAG_LastUpdateChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					if (this._hitbl_Community_CTY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAG_OrderNr", DbType="Int NOT NULL")]
		public int PAG_OrderNr
		{
			get
			{
				return this._PAG_OrderNr;
			}
			set
			{
				if ((this._PAG_OrderNr != value))
				{
					this.OnPAG_OrderNrChanging(value);
					this.SendPropertyChanging();
					this._PAG_OrderNr = value;
					this.SendPropertyChanged("PAG_OrderNr");
					this.OnPAG_OrderNrChanged();
				}
			}
		}
		
		[Association(Name="hitbl_Page_PAG_hitbl_WidgetInstance_IN", Storage="_hitbl_WidgetInstance_INs", ThisKey="PAG_ID", OtherKey="INS_PAG_ID")]
		public EntitySet<hitbl_WidgetInstance_IN> hitbl_WidgetInstance_INs
		{
			get
			{
				return this._hitbl_WidgetInstance_INs;
			}
			set
			{
				this._hitbl_WidgetInstance_INs.Assign(value);
			}
		}
		
		[Association(Name="hitbl_Community_CTY_hitbl_Page_PAG", Storage="_hitbl_Community_CTY", ThisKey="CTY_ID", OtherKey="CTY_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public hitbl_Community_CTY hitbl_Community_CTY
		{
			get
			{
				return this._hitbl_Community_CTY.Entity;
			}
			set
			{
				hitbl_Community_CTY previousValue = this._hitbl_Community_CTY.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_Community_CTY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_Community_CTY.Entity = null;
						previousValue.hitbl_Page_PAGs.Remove(this);
					}
					this._hitbl_Community_CTY.Entity = value;
					if ((value != null))
					{
						value.hitbl_Page_PAGs.Add(this);
						this._CTY_ID = value.CTY_ID;
					}
					else
					{
						this._CTY_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_Community_CTY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hitbl_WidgetInstance_INs(hitbl_WidgetInstance_IN entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Page_PAG = this;
		}
		
		private void detach_hitbl_WidgetInstance_INs(hitbl_WidgetInstance_IN entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_Page_PAG = null;
		}
	}
	
	[Table(Name="dbo.hitbl_Partners_PAR")]
	public partial class hitbl_Partners_PAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAR_ID;
		
		private string _PAR_Name;
		
		private System.Guid _CTY_ID;
		
		private string _PAR_WebSite;
		
		private int _PAR_GeoServiceCalls;
		
		private int _PAR_RESTCalls;
		
		private int _PAR_MonthlyGeoServiceCredits;
		
		private int _PAR_MonthlyRESTCredits;
		
		private System.DateTime _PAR_LastResetDate;
		
		private string _PAR_BaseUrlXSLT;
		
		private string _PAR_MapConfig;
		
		private string _PAR_MobileHeader;
		
		private string _PAR_MobileFooter;
		
		private EntityRef<hitbl_DataObject_OBJ> _hitbl_DataObject_OBJ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAR_IDChanging(System.Guid value);
    partial void OnPAR_IDChanged();
    partial void OnPAR_NameChanging(string value);
    partial void OnPAR_NameChanged();
    partial void OnCTY_IDChanging(System.Guid value);
    partial void OnCTY_IDChanged();
    partial void OnPAR_WebSiteChanging(string value);
    partial void OnPAR_WebSiteChanged();
    partial void OnPAR_GeoServiceCallsChanging(int value);
    partial void OnPAR_GeoServiceCallsChanged();
    partial void OnPAR_RESTCallsChanging(int value);
    partial void OnPAR_RESTCallsChanged();
    partial void OnPAR_MonthlyGeoServiceCreditsChanging(int value);
    partial void OnPAR_MonthlyGeoServiceCreditsChanged();
    partial void OnPAR_MonthlyRESTCreditsChanging(int value);
    partial void OnPAR_MonthlyRESTCreditsChanged();
    partial void OnPAR_LastResetDateChanging(System.DateTime value);
    partial void OnPAR_LastResetDateChanged();
    partial void OnPAR_BaseUrlXSLTChanging(string value);
    partial void OnPAR_BaseUrlXSLTChanged();
    partial void OnPAR_MapConfigChanging(string value);
    partial void OnPAR_MapConfigChanged();
    partial void OnPAR_MobileHeaderChanging(string value);
    partial void OnPAR_MobileHeaderChanged();
    partial void OnPAR_MobileFooterChanging(string value);
    partial void OnPAR_MobileFooterChanged();
    #endregion
		
		public hitbl_Partners_PAR()
		{
			this._hitbl_DataObject_OBJ = default(EntityRef<hitbl_DataObject_OBJ>);
			OnCreated();
		}
		
		[Column(Storage="_PAR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAR_ID
		{
			get
			{
				return this._PAR_ID;
			}
			set
			{
				if ((this._PAR_ID != value))
				{
					this.OnPAR_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_ID = value;
					this.SendPropertyChanged("PAR_ID");
					this.OnPAR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PAR_Name
		{
			get
			{
				return this._PAR_Name;
			}
			set
			{
				if ((this._PAR_Name != value))
				{
					this.OnPAR_NameChanging(value);
					this.SendPropertyChanging();
					this._PAR_Name = value;
					this.SendPropertyChanged("PAR_Name");
					this.OnPAR_NameChanged();
				}
			}
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					if (this._hitbl_DataObject_OBJ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCTY_IDChanging(value);
					this.SendPropertyChanging();
					this._CTY_ID = value;
					this.SendPropertyChanged("CTY_ID");
					this.OnCTY_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_WebSite", DbType="VarChar(128)")]
		public string PAR_WebSite
		{
			get
			{
				return this._PAR_WebSite;
			}
			set
			{
				if ((this._PAR_WebSite != value))
				{
					this.OnPAR_WebSiteChanging(value);
					this.SendPropertyChanging();
					this._PAR_WebSite = value;
					this.SendPropertyChanged("PAR_WebSite");
					this.OnPAR_WebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_GeoServiceCalls", DbType="Int NOT NULL")]
		public int PAR_GeoServiceCalls
		{
			get
			{
				return this._PAR_GeoServiceCalls;
			}
			set
			{
				if ((this._PAR_GeoServiceCalls != value))
				{
					this.OnPAR_GeoServiceCallsChanging(value);
					this.SendPropertyChanging();
					this._PAR_GeoServiceCalls = value;
					this.SendPropertyChanged("PAR_GeoServiceCalls");
					this.OnPAR_GeoServiceCallsChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_RESTCalls", DbType="Int NOT NULL")]
		public int PAR_RESTCalls
		{
			get
			{
				return this._PAR_RESTCalls;
			}
			set
			{
				if ((this._PAR_RESTCalls != value))
				{
					this.OnPAR_RESTCallsChanging(value);
					this.SendPropertyChanging();
					this._PAR_RESTCalls = value;
					this.SendPropertyChanged("PAR_RESTCalls");
					this.OnPAR_RESTCallsChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_MonthlyGeoServiceCredits", DbType="Int NOT NULL")]
		public int PAR_MonthlyGeoServiceCredits
		{
			get
			{
				return this._PAR_MonthlyGeoServiceCredits;
			}
			set
			{
				if ((this._PAR_MonthlyGeoServiceCredits != value))
				{
					this.OnPAR_MonthlyGeoServiceCreditsChanging(value);
					this.SendPropertyChanging();
					this._PAR_MonthlyGeoServiceCredits = value;
					this.SendPropertyChanged("PAR_MonthlyGeoServiceCredits");
					this.OnPAR_MonthlyGeoServiceCreditsChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_MonthlyRESTCredits", DbType="Int NOT NULL")]
		public int PAR_MonthlyRESTCredits
		{
			get
			{
				return this._PAR_MonthlyRESTCredits;
			}
			set
			{
				if ((this._PAR_MonthlyRESTCredits != value))
				{
					this.OnPAR_MonthlyRESTCreditsChanging(value);
					this.SendPropertyChanging();
					this._PAR_MonthlyRESTCredits = value;
					this.SendPropertyChanged("PAR_MonthlyRESTCredits");
					this.OnPAR_MonthlyRESTCreditsChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_LastResetDate", DbType="DateTime NOT NULL")]
		public System.DateTime PAR_LastResetDate
		{
			get
			{
				return this._PAR_LastResetDate;
			}
			set
			{
				if ((this._PAR_LastResetDate != value))
				{
					this.OnPAR_LastResetDateChanging(value);
					this.SendPropertyChanging();
					this._PAR_LastResetDate = value;
					this.SendPropertyChanged("PAR_LastResetDate");
					this.OnPAR_LastResetDateChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_BaseUrlXSLT", DbType="NVarChar(128)")]
		public string PAR_BaseUrlXSLT
		{
			get
			{
				return this._PAR_BaseUrlXSLT;
			}
			set
			{
				if ((this._PAR_BaseUrlXSLT != value))
				{
					this.OnPAR_BaseUrlXSLTChanging(value);
					this.SendPropertyChanging();
					this._PAR_BaseUrlXSLT = value;
					this.SendPropertyChanged("PAR_BaseUrlXSLT");
					this.OnPAR_BaseUrlXSLTChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_MapConfig", DbType="NVarChar(MAX)")]
		public string PAR_MapConfig
		{
			get
			{
				return this._PAR_MapConfig;
			}
			set
			{
				if ((this._PAR_MapConfig != value))
				{
					this.OnPAR_MapConfigChanging(value);
					this.SendPropertyChanging();
					this._PAR_MapConfig = value;
					this.SendPropertyChanged("PAR_MapConfig");
					this.OnPAR_MapConfigChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_MobileHeader", DbType="NVarChar(MAX)")]
		public string PAR_MobileHeader
		{
			get
			{
				return this._PAR_MobileHeader;
			}
			set
			{
				if ((this._PAR_MobileHeader != value))
				{
					this.OnPAR_MobileHeaderChanging(value);
					this.SendPropertyChanging();
					this._PAR_MobileHeader = value;
					this.SendPropertyChanged("PAR_MobileHeader");
					this.OnPAR_MobileHeaderChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_MobileFooter", DbType="NVarChar(MAX)")]
		public string PAR_MobileFooter
		{
			get
			{
				return this._PAR_MobileFooter;
			}
			set
			{
				if ((this._PAR_MobileFooter != value))
				{
					this.OnPAR_MobileFooterChanging(value);
					this.SendPropertyChanging();
					this._PAR_MobileFooter = value;
					this.SendPropertyChanged("PAR_MobileFooter");
					this.OnPAR_MobileFooterChanged();
				}
			}
		}
		
		[Association(Name="hitbl_DataObject_OBJ_hitbl_Partners_PAR", Storage="_hitbl_DataObject_OBJ", ThisKey="CTY_ID", OtherKey="OBJ_ID", IsForeignKey=true)]
		public hitbl_DataObject_OBJ hitbl_DataObject_OBJ
		{
			get
			{
				return this._hitbl_DataObject_OBJ.Entity;
			}
			set
			{
				hitbl_DataObject_OBJ previousValue = this._hitbl_DataObject_OBJ.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_DataObject_OBJ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_DataObject_OBJ.Entity = null;
						previousValue.hitbl_Partners_PARs.Remove(this);
					}
					this._hitbl_DataObject_OBJ.Entity = value;
					if ((value != null))
					{
						value.hitbl_Partners_PARs.Add(this);
						this._CTY_ID = value.OBJ_ID;
					}
					else
					{
						this._CTY_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_DataObject_OBJ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.hitbl_WidgetInstance_INS")]
	public partial class hitbl_WidgetInstance_IN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _INS_ID;
		
		private System.Guid _WDG_ID;
		
		private System.Guid _INS_PAG_ID;
		
		private int _INS_ColumnNo;
		
		private int _INS_OrderNo;
		
		private string _INS_XmlStateData;
		
		private System.DateTime _INS_CreatedDate;
		
		private System.DateTime _INS_LastUpdate;
		
		private int _INS_ShowAfterInsert;
		
		private System.Nullable<System.Guid> _WTP_ID;
		
		private bool _INS_IsFixed;
		
		private bool _INS_HideIfNoContent;
		
		private string _INS_ViewRoles;
		
		private System.Nullable<System.Guid> _INS_OutputTemplate;
		
		private System.Nullable<int> _INS_HeadingTag;
		
		private EntitySet<hitbl_WidgetInstanceText_WIT> _hitbl_WidgetInstanceText_WITs;
		
		private EntityRef<hitbl_Page_PAG> _hitbl_Page_PAG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINS_IDChanging(System.Guid value);
    partial void OnINS_IDChanged();
    partial void OnWDG_IDChanging(System.Guid value);
    partial void OnWDG_IDChanged();
    partial void OnINS_PAG_IDChanging(System.Guid value);
    partial void OnINS_PAG_IDChanged();
    partial void OnINS_ColumnNoChanging(int value);
    partial void OnINS_ColumnNoChanged();
    partial void OnINS_OrderNoChanging(int value);
    partial void OnINS_OrderNoChanged();
    partial void OnINS_XmlStateDataChanging(string value);
    partial void OnINS_XmlStateDataChanged();
    partial void OnINS_CreatedDateChanging(System.DateTime value);
    partial void OnINS_CreatedDateChanged();
    partial void OnINS_LastUpdateChanging(System.DateTime value);
    partial void OnINS_LastUpdateChanged();
    partial void OnINS_ShowAfterInsertChanging(int value);
    partial void OnINS_ShowAfterInsertChanged();
    partial void OnWTP_IDChanging(System.Nullable<System.Guid> value);
    partial void OnWTP_IDChanged();
    partial void OnINS_IsFixedChanging(bool value);
    partial void OnINS_IsFixedChanged();
    partial void OnINS_HideIfNoContentChanging(bool value);
    partial void OnINS_HideIfNoContentChanged();
    partial void OnINS_ViewRolesChanging(string value);
    partial void OnINS_ViewRolesChanged();
    partial void OnINS_OutputTemplateChanging(System.Nullable<System.Guid> value);
    partial void OnINS_OutputTemplateChanged();
    partial void OnINS_HeadingTagChanging(System.Nullable<int> value);
    partial void OnINS_HeadingTagChanged();
    #endregion
		
		public hitbl_WidgetInstance_IN()
		{
			this._hitbl_WidgetInstanceText_WITs = new EntitySet<hitbl_WidgetInstanceText_WIT>(new Action<hitbl_WidgetInstanceText_WIT>(this.attach_hitbl_WidgetInstanceText_WITs), new Action<hitbl_WidgetInstanceText_WIT>(this.detach_hitbl_WidgetInstanceText_WITs));
			this._hitbl_Page_PAG = default(EntityRef<hitbl_Page_PAG>);
			OnCreated();
		}
		
		[Column(Storage="_INS_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid INS_ID
		{
			get
			{
				return this._INS_ID;
			}
			set
			{
				if ((this._INS_ID != value))
				{
					this.OnINS_IDChanging(value);
					this.SendPropertyChanging();
					this._INS_ID = value;
					this.SendPropertyChanged("INS_ID");
					this.OnINS_IDChanged();
				}
			}
		}
		
		[Column(Storage="_WDG_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WDG_ID
		{
			get
			{
				return this._WDG_ID;
			}
			set
			{
				if ((this._WDG_ID != value))
				{
					this.OnWDG_IDChanging(value);
					this.SendPropertyChanging();
					this._WDG_ID = value;
					this.SendPropertyChanged("WDG_ID");
					this.OnWDG_IDChanged();
				}
			}
		}
		
		[Column(Storage="_INS_PAG_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid INS_PAG_ID
		{
			get
			{
				return this._INS_PAG_ID;
			}
			set
			{
				if ((this._INS_PAG_ID != value))
				{
					if (this._hitbl_Page_PAG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINS_PAG_IDChanging(value);
					this.SendPropertyChanging();
					this._INS_PAG_ID = value;
					this.SendPropertyChanged("INS_PAG_ID");
					this.OnINS_PAG_IDChanged();
				}
			}
		}
		
		[Column(Storage="_INS_ColumnNo", DbType="Int NOT NULL")]
		public int INS_ColumnNo
		{
			get
			{
				return this._INS_ColumnNo;
			}
			set
			{
				if ((this._INS_ColumnNo != value))
				{
					this.OnINS_ColumnNoChanging(value);
					this.SendPropertyChanging();
					this._INS_ColumnNo = value;
					this.SendPropertyChanged("INS_ColumnNo");
					this.OnINS_ColumnNoChanged();
				}
			}
		}
		
		[Column(Storage="_INS_OrderNo", DbType="Int NOT NULL")]
		public int INS_OrderNo
		{
			get
			{
				return this._INS_OrderNo;
			}
			set
			{
				if ((this._INS_OrderNo != value))
				{
					this.OnINS_OrderNoChanging(value);
					this.SendPropertyChanging();
					this._INS_OrderNo = value;
					this.SendPropertyChanged("INS_OrderNo");
					this.OnINS_OrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_INS_XmlStateData", DbType="NVarChar(MAX)")]
		public string INS_XmlStateData
		{
			get
			{
				return this._INS_XmlStateData;
			}
			set
			{
				if ((this._INS_XmlStateData != value))
				{
					this.OnINS_XmlStateDataChanging(value);
					this.SendPropertyChanging();
					this._INS_XmlStateData = value;
					this.SendPropertyChanged("INS_XmlStateData");
					this.OnINS_XmlStateDataChanged();
				}
			}
		}
		
		[Column(Storage="_INS_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime INS_CreatedDate
		{
			get
			{
				return this._INS_CreatedDate;
			}
			set
			{
				if ((this._INS_CreatedDate != value))
				{
					this.OnINS_CreatedDateChanging(value);
					this.SendPropertyChanging();
					this._INS_CreatedDate = value;
					this.SendPropertyChanged("INS_CreatedDate");
					this.OnINS_CreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_INS_LastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime INS_LastUpdate
		{
			get
			{
				return this._INS_LastUpdate;
			}
			set
			{
				if ((this._INS_LastUpdate != value))
				{
					this.OnINS_LastUpdateChanging(value);
					this.SendPropertyChanging();
					this._INS_LastUpdate = value;
					this.SendPropertyChanged("INS_LastUpdate");
					this.OnINS_LastUpdateChanged();
				}
			}
		}
		
		[Column(Storage="_INS_ShowAfterInsert", DbType="Int NOT NULL")]
		public int INS_ShowAfterInsert
		{
			get
			{
				return this._INS_ShowAfterInsert;
			}
			set
			{
				if ((this._INS_ShowAfterInsert != value))
				{
					this.OnINS_ShowAfterInsertChanging(value);
					this.SendPropertyChanging();
					this._INS_ShowAfterInsert = value;
					this.SendPropertyChanged("INS_ShowAfterInsert");
					this.OnINS_ShowAfterInsertChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WTP_ID
		{
			get
			{
				return this._WTP_ID;
			}
			set
			{
				if ((this._WTP_ID != value))
				{
					this.OnWTP_IDChanging(value);
					this.SendPropertyChanging();
					this._WTP_ID = value;
					this.SendPropertyChanged("WTP_ID");
					this.OnWTP_IDChanged();
				}
			}
		}
		
		[Column(Storage="_INS_IsFixed", DbType="Bit NOT NULL")]
		public bool INS_IsFixed
		{
			get
			{
				return this._INS_IsFixed;
			}
			set
			{
				if ((this._INS_IsFixed != value))
				{
					this.OnINS_IsFixedChanging(value);
					this.SendPropertyChanging();
					this._INS_IsFixed = value;
					this.SendPropertyChanged("INS_IsFixed");
					this.OnINS_IsFixedChanged();
				}
			}
		}
		
		[Column(Storage="_INS_HideIfNoContent", DbType="Bit NOT NULL")]
		public bool INS_HideIfNoContent
		{
			get
			{
				return this._INS_HideIfNoContent;
			}
			set
			{
				if ((this._INS_HideIfNoContent != value))
				{
					this.OnINS_HideIfNoContentChanging(value);
					this.SendPropertyChanging();
					this._INS_HideIfNoContent = value;
					this.SendPropertyChanged("INS_HideIfNoContent");
					this.OnINS_HideIfNoContentChanged();
				}
			}
		}
		
		[Column(Storage="_INS_ViewRoles", DbType="NVarChar(MAX)")]
		public string INS_ViewRoles
		{
			get
			{
				return this._INS_ViewRoles;
			}
			set
			{
				if ((this._INS_ViewRoles != value))
				{
					this.OnINS_ViewRolesChanging(value);
					this.SendPropertyChanging();
					this._INS_ViewRoles = value;
					this.SendPropertyChanged("INS_ViewRoles");
					this.OnINS_ViewRolesChanged();
				}
			}
		}
		
		[Column(Storage="_INS_OutputTemplate", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> INS_OutputTemplate
		{
			get
			{
				return this._INS_OutputTemplate;
			}
			set
			{
				if ((this._INS_OutputTemplate != value))
				{
					this.OnINS_OutputTemplateChanging(value);
					this.SendPropertyChanging();
					this._INS_OutputTemplate = value;
					this.SendPropertyChanged("INS_OutputTemplate");
					this.OnINS_OutputTemplateChanged();
				}
			}
		}
		
		[Column(Storage="_INS_HeadingTag", DbType="Int")]
		public System.Nullable<int> INS_HeadingTag
		{
			get
			{
				return this._INS_HeadingTag;
			}
			set
			{
				if ((this._INS_HeadingTag != value))
				{
					this.OnINS_HeadingTagChanging(value);
					this.SendPropertyChanging();
					this._INS_HeadingTag = value;
					this.SendPropertyChanged("INS_HeadingTag");
					this.OnINS_HeadingTagChanged();
				}
			}
		}
		
		[Association(Name="hitbl_WidgetInstance_IN_hitbl_WidgetInstanceText_WIT", Storage="_hitbl_WidgetInstanceText_WITs", ThisKey="INS_ID", OtherKey="INS_ID")]
		public EntitySet<hitbl_WidgetInstanceText_WIT> hitbl_WidgetInstanceText_WITs
		{
			get
			{
				return this._hitbl_WidgetInstanceText_WITs;
			}
			set
			{
				this._hitbl_WidgetInstanceText_WITs.Assign(value);
			}
		}
		
		[Association(Name="hitbl_Page_PAG_hitbl_WidgetInstance_IN", Storage="_hitbl_Page_PAG", ThisKey="INS_PAG_ID", OtherKey="PAG_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public hitbl_Page_PAG hitbl_Page_PAG
		{
			get
			{
				return this._hitbl_Page_PAG.Entity;
			}
			set
			{
				hitbl_Page_PAG previousValue = this._hitbl_Page_PAG.Entity;
				if (((previousValue != value) 
							|| (this._hitbl_Page_PAG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hitbl_Page_PAG.Entity = null;
						previousValue.hitbl_WidgetInstance_INs.Remove(this);
					}
					this._hitbl_Page_PAG.Entity = value;
					if ((value != null))
					{
						value.hitbl_WidgetInstance_INs.Add(this);
						this._INS_PAG_ID = value.PAG_ID;
					}
					else
					{
						this._INS_PAG_ID = default(System.Guid);
					}
					this.SendPropertyChanged("hitbl_Page_PAG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hitbl_WidgetInstanceText_WITs(hitbl_WidgetInstanceText_WIT entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_WidgetInstance_IN = this;
		}
		
		private void detach_hitbl_WidgetInstanceText_WITs(hitbl_WidgetInstanceText_WIT entity)
		{
			this.SendPropertyChanging();
			entity.hitbl_WidgetInstance_IN = null;
		}
	}
	
	[Table(Name="dbo.hitbl_WidgetTemplates_WTP")]
	public partial class hitbl_WidgetTemplates_WTP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WTP_ID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private string _WTP_Name;
		
		private string _WTP_Template;
		
		private string _WTP_XMLTemplate;
		
		private bool _WTP_ExplicitInserted;
		
		private int _WTP_ContentPadding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWTP_IDChanging(System.Guid value);
    partial void OnWTP_IDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnWTP_NameChanging(string value);
    partial void OnWTP_NameChanged();
    partial void OnWTP_TemplateChanging(string value);
    partial void OnWTP_TemplateChanged();
    partial void OnWTP_XMLTemplateChanging(string value);
    partial void OnWTP_XMLTemplateChanged();
    partial void OnWTP_ExplicitInsertedChanging(bool value);
    partial void OnWTP_ExplicitInsertedChanged();
    partial void OnWTP_ContentPaddingChanging(int value);
    partial void OnWTP_ContentPaddingChanged();
    #endregion
		
		public hitbl_WidgetTemplates_WTP()
		{
			OnCreated();
		}
		
		[Column(Storage="_WTP_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WTP_ID
		{
			get
			{
				return this._WTP_ID;
			}
			set
			{
				if ((this._WTP_ID != value))
				{
					this.OnWTP_IDChanging(value);
					this.SendPropertyChanging();
					this._WTP_ID = value;
					this.SendPropertyChanged("WTP_ID");
					this.OnWTP_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WTP_Name
		{
			get
			{
				return this._WTP_Name;
			}
			set
			{
				if ((this._WTP_Name != value))
				{
					this.OnWTP_NameChanging(value);
					this.SendPropertyChanging();
					this._WTP_Name = value;
					this.SendPropertyChanged("WTP_Name");
					this.OnWTP_NameChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_Template", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WTP_Template
		{
			get
			{
				return this._WTP_Template;
			}
			set
			{
				if ((this._WTP_Template != value))
				{
					this.OnWTP_TemplateChanging(value);
					this.SendPropertyChanging();
					this._WTP_Template = value;
					this.SendPropertyChanged("WTP_Template");
					this.OnWTP_TemplateChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_XMLTemplate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WTP_XMLTemplate
		{
			get
			{
				return this._WTP_XMLTemplate;
			}
			set
			{
				if ((this._WTP_XMLTemplate != value))
				{
					this.OnWTP_XMLTemplateChanging(value);
					this.SendPropertyChanging();
					this._WTP_XMLTemplate = value;
					this.SendPropertyChanged("WTP_XMLTemplate");
					this.OnWTP_XMLTemplateChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_ExplicitInserted", DbType="Bit NOT NULL")]
		public bool WTP_ExplicitInserted
		{
			get
			{
				return this._WTP_ExplicitInserted;
			}
			set
			{
				if ((this._WTP_ExplicitInserted != value))
				{
					this.OnWTP_ExplicitInsertedChanging(value);
					this.SendPropertyChanging();
					this._WTP_ExplicitInserted = value;
					this.SendPropertyChanged("WTP_ExplicitInserted");
					this.OnWTP_ExplicitInsertedChanged();
				}
			}
		}
		
		[Column(Storage="_WTP_ContentPadding", DbType="Int NOT NULL")]
		public int WTP_ContentPadding
		{
			get
			{
				return this._WTP_ContentPadding;
			}
			set
			{
				if ((this._WTP_ContentPadding != value))
				{
					this.OnWTP_ContentPaddingChanging(value);
					this.SendPropertyChanging();
					this._WTP_ContentPadding = value;
					this.SendPropertyChanged("WTP_ContentPadding");
					this.OnWTP_ContentPaddingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class hisp_GeoKoordinates_GetResult
	{
		
		private string _GEO_Street;
		
		private string _GEO_PLZ;
		
		private string _GEO_City;
		
		private string _GEO_Kanton;
		
		private string _GEO_Land;
		
		private double _GEO_Breite;
		
		private double _GEO_Laenge;
		
		public hisp_GeoKoordinates_GetResult()
		{
		}
		
		[Column(Storage="_GEO_Street", DbType="NVarChar(128)")]
		public string GEO_Street
		{
			get
			{
				return this._GEO_Street;
			}
			set
			{
				if ((this._GEO_Street != value))
				{
					this._GEO_Street = value;
				}
			}
		}
		
		[Column(Storage="_GEO_PLZ", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string GEO_PLZ
		{
			get
			{
				return this._GEO_PLZ;
			}
			set
			{
				if ((this._GEO_PLZ != value))
				{
					this._GEO_PLZ = value;
				}
			}
		}
		
		[Column(Storage="_GEO_City", DbType="NVarChar(50)")]
		public string GEO_City
		{
			get
			{
				return this._GEO_City;
			}
			set
			{
				if ((this._GEO_City != value))
				{
					this._GEO_City = value;
				}
			}
		}
		
		[Column(Storage="_GEO_Kanton", DbType="NVarChar(25)")]
		public string GEO_Kanton
		{
			get
			{
				return this._GEO_Kanton;
			}
			set
			{
				if ((this._GEO_Kanton != value))
				{
					this._GEO_Kanton = value;
				}
			}
		}
		
		[Column(Storage="_GEO_Land", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GEO_Land
		{
			get
			{
				return this._GEO_Land;
			}
			set
			{
				if ((this._GEO_Land != value))
				{
					this._GEO_Land = value;
				}
			}
		}
		
		[Column(Storage="_GEO_Breite", DbType="Float NOT NULL")]
		public double GEO_Breite
		{
			get
			{
				return this._GEO_Breite;
			}
			set
			{
				if ((this._GEO_Breite != value))
				{
					this._GEO_Breite = value;
				}
			}
		}
		
		[Column(Storage="_GEO_Laenge", DbType="Float NOT NULL")]
		public double GEO_Laenge
		{
			get
			{
				return this._GEO_Laenge;
			}
			set
			{
				if ((this._GEO_Laenge != value))
				{
					this._GEO_Laenge = value;
				}
			}
		}
	}
	
	public partial class hisp_TagWord_GetIDSByWordsResult
	{
		
		private System.Guid _TGW_ID;
		
		public hisp_TagWord_GetIDSByWordsResult()
		{
		}
		
		[Column(Storage="_TGW_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TGW_ID
		{
			get
			{
				return this._TGW_ID;
			}
			set
			{
				if ((this._TGW_ID != value))
				{
					this._TGW_ID = value;
				}
			}
		}
	}
	
	public partial class hisp_Community_FindGroupsResult
	{
		
		private System.Guid _OBJ_ID;
		
		public hisp_Community_FindGroupsResult()
		{
		}
		
		[Column(Storage="_OBJ_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OBJ_ID
		{
			get
			{
				return this._OBJ_ID;
			}
			set
			{
				if ((this._OBJ_ID != value))
				{
					this._OBJ_ID = value;
				}
			}
		}
	}
	
	public partial class hisp_Content_GetContentResult
	{
		
		private string _Content;
		
		public hisp_Content_GetContentResult()
		{
		}
		
		[Column(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetNavigationForRenderResult
	{
		
		private string _NAV_XMLNavigation;
		
		public hisp_Navigation_GetNavigationForRenderResult()
		{
		}
		
		[Column(Storage="_NAV_XMLNavigation", DbType="NVarChar(MAX)")]
		public string NAV_XMLNavigation
		{
			get
			{
				return this._NAV_XMLNavigation;
			}
			set
			{
				if ((this._NAV_XMLNavigation != value))
				{
					this._NAV_XMLNavigation = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetNavigationIDResult
	{
		
		private System.Guid _NST_ID;
		
		public hisp_Navigation_GetNavigationIDResult()
		{
		}
		
		[Column(Storage="_NST_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NST_ID
		{
			get
			{
				return this._NST_ID;
			}
			set
			{
				if ((this._NST_ID != value))
				{
					this._NST_ID = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetNavigationLanguageXMLResult
	{
		
		private string _NAV_XMLNames;
		
		public hisp_Navigation_GetNavigationLanguageXMLResult()
		{
		}
		
		[Column(Storage="_NAV_XMLNames", DbType="NVarChar(MAX)")]
		public string NAV_XMLNames
		{
			get
			{
				return this._NAV_XMLNames;
			}
			set
			{
				if ((this._NAV_XMLNames != value))
				{
					this._NAV_XMLNames = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetNavigationKeyNameResult
	{
		
		private string _NST_KeyName;
		
		public hisp_Navigation_GetNavigationKeyNameResult()
		{
		}
		
		[Column(Storage="_NST_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NST_KeyName
		{
			get
			{
				return this._NST_KeyName;
			}
			set
			{
				if ((this._NST_KeyName != value))
				{
					this._NST_KeyName = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetPreChacheResult
	{
		
		private string _NPC_PreCacheXML;
		
		public hisp_Navigation_GetPreChacheResult()
		{
		}
		
		[Column(Storage="_NPC_PreCacheXML", DbType="NVarChar(MAX)")]
		public string NPC_PreCacheXML
		{
			get
			{
				return this._NPC_PreCacheXML;
			}
			set
			{
				if ((this._NPC_PreCacheXML != value))
				{
					this._NPC_PreCacheXML = value;
				}
			}
		}
	}
	
	public partial class hisp_User_GetUserLockOutResult
	{
		
		private bool _IsLockedOut;
		
		public hisp_User_GetUserLockOutResult()
		{
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this._IsLockedOut = value;
				}
			}
		}
	}
	
	public partial class hisp_Navigation_GetNavigationStructureXMLResult
	{
		
		private string _NST_XMLStruct;
		
		private bool _NST_IsDirty;
		
		public hisp_Navigation_GetNavigationStructureXMLResult()
		{
		}
		
		[Column(Storage="_NST_XMLStruct", DbType="NVarChar(MAX)")]
		public string NST_XMLStruct
		{
			get
			{
				return this._NST_XMLStruct;
			}
			set
			{
				if ((this._NST_XMLStruct != value))
				{
					this._NST_XMLStruct = value;
				}
			}
		}
		
		[Column(Storage="_NST_IsDirty", DbType="Bit NOT NULL")]
		public bool NST_IsDirty
		{
			get
			{
				return this._NST_IsDirty;
			}
			set
			{
				if ((this._NST_IsDirty != value))
				{
					this._NST_IsDirty = value;
				}
			}
		}
	}
	
	public partial class hisp_Community_GetIDSByVUrlsResult
	{
		
		private System.Nullable<System.Guid> _CTY_ID;
		
		private string _CTY_VirtualUrl;
		
		public hisp_Community_GetIDSByVUrlsResult()
		{
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					this._CTY_ID = value;
				}
			}
		}
		
		[Column(Storage="_CTY_VirtualUrl", DbType="NVarChar(100)")]
		public string CTY_VirtualUrl
		{
			get
			{
				return this._CTY_VirtualUrl;
			}
			set
			{
				if ((this._CTY_VirtualUrl != value))
				{
					this._CTY_VirtualUrl = value;
				}
			}
		}
	}
	
	public partial class hisp_DataObjectTag_GetAllButSynonymsResult
	{
		
		private System.Guid _OBJ_ID;
		
		private string _OBJ_Title;
		
		private int _OBJ_Type;
		
		public hisp_DataObjectTag_GetAllButSynonymsResult()
		{
		}
		
		[Column(Storage="_OBJ_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OBJ_ID
		{
			get
			{
				return this._OBJ_ID;
			}
			set
			{
				if ((this._OBJ_ID != value))
				{
					this._OBJ_ID = value;
				}
			}
		}
		
		[Column(Storage="_OBJ_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OBJ_Title
		{
			get
			{
				return this._OBJ_Title;
			}
			set
			{
				if ((this._OBJ_Title != value))
				{
					this._OBJ_Title = value;
				}
			}
		}
		
		[Column(Storage="_OBJ_Type", DbType="Int NOT NULL")]
		public int OBJ_Type
		{
			get
			{
				return this._OBJ_Type;
			}
			set
			{
				if ((this._OBJ_Type != value))
				{
					this._OBJ_Type = value;
				}
			}
		}
	}
	
	public partial class hisp_Widget_LoadInstanceDataResult
	{
		
		private string _INS_XmlStateData;
		
		public hisp_Widget_LoadInstanceDataResult()
		{
		}
		
		[Column(Storage="_INS_XmlStateData", DbType="NVarChar(MAX)")]
		public string INS_XmlStateData
		{
			get
			{
				return this._INS_XmlStateData;
			}
			set
			{
				if ((this._INS_XmlStateData != value))
				{
					this._INS_XmlStateData = value;
				}
			}
		}
	}
	
	public partial class hisp_WidgetTemplates_GetUserTemplatesResult
	{
		
		private System.Guid _WTP_ID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private string _WTP_Name;
		
		private string _WTP_Template;
		
		private string _WTP_XMLTemplate;
		
		private bool _WTP_ExplicitInserted;
		
		public hisp_WidgetTemplates_GetUserTemplatesResult()
		{
		}
		
		[Column(Storage="_WTP_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WTP_ID
		{
			get
			{
				return this._WTP_ID;
			}
			set
			{
				if ((this._WTP_ID != value))
				{
					this._WTP_ID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_WTP_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WTP_Name
		{
			get
			{
				return this._WTP_Name;
			}
			set
			{
				if ((this._WTP_Name != value))
				{
					this._WTP_Name = value;
				}
			}
		}
		
		[Column(Storage="_WTP_Template", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WTP_Template
		{
			get
			{
				return this._WTP_Template;
			}
			set
			{
				if ((this._WTP_Template != value))
				{
					this._WTP_Template = value;
				}
			}
		}
		
		[Column(Storage="_WTP_XMLTemplate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WTP_XMLTemplate
		{
			get
			{
				return this._WTP_XMLTemplate;
			}
			set
			{
				if ((this._WTP_XMLTemplate != value))
				{
					this._WTP_XMLTemplate = value;
				}
			}
		}
		
		[Column(Storage="_WTP_ExplicitInserted", DbType="Bit NOT NULL")]
		public bool WTP_ExplicitInserted
		{
			get
			{
				return this._WTP_ExplicitInserted;
			}
			set
			{
				if ((this._WTP_ExplicitInserted != value))
				{
					this._WTP_ExplicitInserted = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessagesGroup_ExistResult
	{
		
		private int _Column1;
		
		public hisp_UserMessagesGroup_ExistResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessagesGroup_LoadResult
	{
		
		private System.Guid _ASP_UserId;
		
		private int _MGR_Type;
		
		private int _MGR_GroupId;
		
		private string _MGR_Title;
		
		public hisp_UserMessagesGroup_LoadResult()
		{
		}
		
		[Column(Storage="_ASP_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ASP_UserId
		{
			get
			{
				return this._ASP_UserId;
			}
			set
			{
				if ((this._ASP_UserId != value))
				{
					this._ASP_UserId = value;
				}
			}
		}
		
		[Column(Storage="_MGR_Type", DbType="Int NOT NULL")]
		public int MGR_Type
		{
			get
			{
				return this._MGR_Type;
			}
			set
			{
				if ((this._MGR_Type != value))
				{
					this._MGR_Type = value;
				}
			}
		}
		
		[Column(Storage="_MGR_GroupId", DbType="Int NOT NULL")]
		public int MGR_GroupId
		{
			get
			{
				return this._MGR_GroupId;
			}
			set
			{
				if ((this._MGR_GroupId != value))
				{
					this._MGR_GroupId = value;
				}
			}
		}
		
		[Column(Storage="_MGR_Title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string MGR_Title
		{
			get
			{
				return this._MGR_Title;
			}
			set
			{
				if ((this._MGR_Title != value))
				{
					this._MGR_Title = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessagesGroup_UpdateResult
	{
		
		private System.Nullable<int> _Column1;
		
		public hisp_UserMessagesGroup_UpdateResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessages_GetRequestUnreadCountResult
	{
		
		private System.Nullable<int> _NumberMessages;
		
		public hisp_UserMessages_GetRequestUnreadCountResult()
		{
		}
		
		[Column(Storage="_NumberMessages", DbType="Int")]
		public System.Nullable<int> NumberMessages
		{
			get
			{
				return this._NumberMessages;
			}
			set
			{
				if ((this._NumberMessages != value))
				{
					this._NumberMessages = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessages_GetMessagesUnreadCountResult
	{
		
		private System.Nullable<int> _NumberMessages;
		
		public hisp_UserMessages_GetMessagesUnreadCountResult()
		{
		}
		
		[Column(Storage="_NumberMessages", DbType="Int")]
		public System.Nullable<int> NumberMessages
		{
			get
			{
				return this._NumberMessages;
			}
			set
			{
				if ((this._NumberMessages != value))
				{
					this._NumberMessages = value;
				}
			}
		}
	}
	
	public partial class hisp_UserMessages_GetAlertsUnreadCountResult
	{
		
		private System.Nullable<int> _NumberMessages;
		
		public hisp_UserMessages_GetAlertsUnreadCountResult()
		{
		}
		
		[Column(Storage="_NumberMessages", DbType="Int")]
		public System.Nullable<int> NumberMessages
		{
			get
			{
				return this._NumberMessages;
			}
			set
			{
				if ((this._NumberMessages != value))
				{
					this._NumberMessages = value;
				}
			}
		}
	}
	
	public partial class hisp_UserFriend_IsFriendResult
	{
		
		private int _Column1;
		
		public hisp_UserFriend_IsFriendResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_TagWord_GetByWordsResult
	{
		
		private System.Guid _OBJ_ID;
		
		private string _TagWordLower;
		
		private string _OBJ_Title;
		
		public hisp_TagWord_GetByWordsResult()
		{
		}
		
		[Column(Storage="_OBJ_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OBJ_ID
		{
			get
			{
				return this._OBJ_ID;
			}
			set
			{
				if ((this._OBJ_ID != value))
				{
					this._OBJ_ID = value;
				}
			}
		}
		
		[Column(Storage="_TagWordLower", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TagWordLower
		{
			get
			{
				return this._TagWordLower;
			}
			set
			{
				if ((this._TagWordLower != value))
				{
					this._TagWordLower = value;
				}
			}
		}
		
		[Column(Storage="_OBJ_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OBJ_Title
		{
			get
			{
				return this._OBJ_Title;
			}
			set
			{
				if ((this._OBJ_Title != value))
				{
					this._OBJ_Title = value;
				}
			}
		}
	}
	
	public partial class hisp_TagWord_GetIDByWordResult
	{
		
		private System.Nullable<System.Guid> _Column1;
		
		public hisp_TagWord_GetIDByWordResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_Profile_IsUserOnlineResult
	{
		
		private int _Column1;
		
		public hisp_Profile_IsUserOnlineResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_Community_IsUserMemberResult
	{
		
		private System.Guid _CTY_ID;
		
		private System.Guid _USR_ID;
		
		private bool _CUR_IsOwner;
		
		private System.Nullable<int> _CUR_Status;
		
		private System.Nullable<System.DateTime> _CUR_InsertedDate;
		
		private System.Nullable<System.Guid> _USR_ID_InvitedBy;
		
		public hisp_Community_IsUserMemberResult()
		{
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					this._CTY_ID = value;
				}
			}
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
		
		[Column(Storage="_CUR_IsOwner", DbType="Bit NOT NULL")]
		public bool CUR_IsOwner
		{
			get
			{
				return this._CUR_IsOwner;
			}
			set
			{
				if ((this._CUR_IsOwner != value))
				{
					this._CUR_IsOwner = value;
				}
			}
		}
		
		[Column(Storage="_CUR_Status", DbType="Int")]
		public System.Nullable<int> CUR_Status
		{
			get
			{
				return this._CUR_Status;
			}
			set
			{
				if ((this._CUR_Status != value))
				{
					this._CUR_Status = value;
				}
			}
		}
		
		[Column(Storage="_CUR_InsertedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CUR_InsertedDate
		{
			get
			{
				return this._CUR_InsertedDate;
			}
			set
			{
				if ((this._CUR_InsertedDate != value))
				{
					this._CUR_InsertedDate = value;
				}
			}
		}
		
		[Column(Storage="_USR_ID_InvitedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USR_ID_InvitedBy
		{
			get
			{
				return this._USR_ID_InvitedBy;
			}
			set
			{
				if ((this._USR_ID_InvitedBy != value))
				{
					this._USR_ID_InvitedBy = value;
				}
			}
		}
	}
	
	public partial class hisp_Widget_GetDetailWidgetPagesResult
	{
		
		private string _OBJ_Title;
		
		private string _VirtualURL;
		
		public hisp_Widget_GetDetailWidgetPagesResult()
		{
		}
		
		[Column(Storage="_OBJ_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OBJ_Title
		{
			get
			{
				return this._OBJ_Title;
			}
			set
			{
				if ((this._OBJ_Title != value))
				{
					this._OBJ_Title = value;
				}
			}
		}
		
		[Column(Storage="_VirtualURL", DbType="NVarChar(100)")]
		public string VirtualURL
		{
			get
			{
				return this._VirtualURL;
			}
			set
			{
				if ((this._VirtualURL != value))
				{
					this._VirtualURL = value;
				}
			}
		}
	}
	
	public partial class hisp_Widget_LoadInstanceDataResult1
	{
		
		private string _INS_XmlStateData;
		
		public hisp_Widget_LoadInstanceDataResult1()
		{
		}
		
		[Column(Storage="_INS_XmlStateData", DbType="NVarChar(MAX)")]
		public string INS_XmlStateData
		{
			get
			{
				return this._INS_XmlStateData;
			}
			set
			{
				if ((this._INS_XmlStateData != value))
				{
					this._INS_XmlStateData = value;
				}
			}
		}
	}
	
	public partial class hisp_WidgetTemplates_GetCommunityTemplatesResult
	{
		
		private string _WTP_Template;
		
		public hisp_WidgetTemplates_GetCommunityTemplatesResult()
		{
		}
		
		[Column(Storage="_WTP_Template", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WTP_Template
		{
			get
			{
				return this._WTP_Template;
			}
			set
			{
				if ((this._WTP_Template != value))
				{
					this._WTP_Template = value;
				}
			}
		}
	}
	
	public partial class hisp_Community_GetMaxPageOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public hisp_Community_GetMaxPageOrderResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class hisp_Partners_LoadResult
	{
		
		private System.Guid _USR_ID;
		
		private System.Guid _PAR_ID;
		
		private System.Guid _PAR_ID1;
		
		private string _PAR_Name;
		
		private System.Guid _CTY_ID;
		
		private string _PAR_WebSite;
		
		private int _PAR_GeoServiceCalls;
		
		private int _PAR_RESTCalls;
		
		private int _PAR_MonthlyGeoServiceCredits;
		
		private int _PAR_MonthlyRESTCredits;
		
		private System.DateTime _PAR_LastResetDate;
		
		private string _PAR_BaseUrlXSLT;
		
		private string _PAR_MapConfig;
		
		private string _PAR_MobileHeader;
		
		private string _PAR_MobileFooter;
		
		public hisp_Partners_LoadResult()
		{
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
		
		[Column(Storage="_PAR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_ID
		{
			get
			{
				return this._PAR_ID;
			}
			set
			{
				if ((this._PAR_ID != value))
				{
					this._PAR_ID = value;
				}
			}
		}
		
		[Column(Storage="_PAR_ID1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_ID1
		{
			get
			{
				return this._PAR_ID1;
			}
			set
			{
				if ((this._PAR_ID1 != value))
				{
					this._PAR_ID1 = value;
				}
			}
		}
		
		[Column(Storage="_PAR_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PAR_Name
		{
			get
			{
				return this._PAR_Name;
			}
			set
			{
				if ((this._PAR_Name != value))
				{
					this._PAR_Name = value;
				}
			}
		}
		
		[Column(Storage="_CTY_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CTY_ID
		{
			get
			{
				return this._CTY_ID;
			}
			set
			{
				if ((this._CTY_ID != value))
				{
					this._CTY_ID = value;
				}
			}
		}
		
		[Column(Storage="_PAR_WebSite", DbType="VarChar(128)")]
		public string PAR_WebSite
		{
			get
			{
				return this._PAR_WebSite;
			}
			set
			{
				if ((this._PAR_WebSite != value))
				{
					this._PAR_WebSite = value;
				}
			}
		}
		
		[Column(Storage="_PAR_GeoServiceCalls", DbType="Int NOT NULL")]
		public int PAR_GeoServiceCalls
		{
			get
			{
				return this._PAR_GeoServiceCalls;
			}
			set
			{
				if ((this._PAR_GeoServiceCalls != value))
				{
					this._PAR_GeoServiceCalls = value;
				}
			}
		}
		
		[Column(Storage="_PAR_RESTCalls", DbType="Int NOT NULL")]
		public int PAR_RESTCalls
		{
			get
			{
				return this._PAR_RESTCalls;
			}
			set
			{
				if ((this._PAR_RESTCalls != value))
				{
					this._PAR_RESTCalls = value;
				}
			}
		}
		
		[Column(Storage="_PAR_MonthlyGeoServiceCredits", DbType="Int NOT NULL")]
		public int PAR_MonthlyGeoServiceCredits
		{
			get
			{
				return this._PAR_MonthlyGeoServiceCredits;
			}
			set
			{
				if ((this._PAR_MonthlyGeoServiceCredits != value))
				{
					this._PAR_MonthlyGeoServiceCredits = value;
				}
			}
		}
		
		[Column(Storage="_PAR_MonthlyRESTCredits", DbType="Int NOT NULL")]
		public int PAR_MonthlyRESTCredits
		{
			get
			{
				return this._PAR_MonthlyRESTCredits;
			}
			set
			{
				if ((this._PAR_MonthlyRESTCredits != value))
				{
					this._PAR_MonthlyRESTCredits = value;
				}
			}
		}
		
		[Column(Storage="_PAR_LastResetDate", DbType="DateTime NOT NULL")]
		public System.DateTime PAR_LastResetDate
		{
			get
			{
				return this._PAR_LastResetDate;
			}
			set
			{
				if ((this._PAR_LastResetDate != value))
				{
					this._PAR_LastResetDate = value;
				}
			}
		}
		
		[Column(Storage="_PAR_BaseUrlXSLT", DbType="NVarChar(128)")]
		public string PAR_BaseUrlXSLT
		{
			get
			{
				return this._PAR_BaseUrlXSLT;
			}
			set
			{
				if ((this._PAR_BaseUrlXSLT != value))
				{
					this._PAR_BaseUrlXSLT = value;
				}
			}
		}
		
		[Column(Storage="_PAR_MapConfig", DbType="NVarChar(MAX)")]
		public string PAR_MapConfig
		{
			get
			{
				return this._PAR_MapConfig;
			}
			set
			{
				if ((this._PAR_MapConfig != value))
				{
					this._PAR_MapConfig = value;
				}
			}
		}
		
		[Column(Storage="_PAR_MobileHeader", DbType="NVarChar(MAX)")]
		public string PAR_MobileHeader
		{
			get
			{
				return this._PAR_MobileHeader;
			}
			set
			{
				if ((this._PAR_MobileHeader != value))
				{
					this._PAR_MobileHeader = value;
				}
			}
		}
		
		[Column(Storage="_PAR_MobileFooter", DbType="NVarChar(MAX)")]
		public string PAR_MobileFooter
		{
			get
			{
				return this._PAR_MobileFooter;
			}
			set
			{
				if ((this._PAR_MobileFooter != value))
				{
					this._PAR_MobileFooter = value;
				}
			}
		}
	}
	
	public partial class hisp_DataObject_GetUserIDByFacebookUserIdResult
	{
		
		private System.Guid _USR_ID;
		
		public hisp_DataObject_GetUserIDByFacebookUserIdResult()
		{
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
	}
	
	public partial class hisp_DataObject_GetUserIDByPPIDResult
	{
		
		private System.Guid _USR_ID;
		
		public hisp_DataObject_GetUserIDByPPIDResult()
		{
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
	}
	
	public partial class hisp_DataObject_GetUserIDByOpenIDResult
	{
		
		private System.Guid _USR_ID;
		
		public hisp_DataObject_GetUserIDByOpenIDResult()
		{
		}
		
		[Column(Storage="_USR_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this._USR_ID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
